# set to local images because too long execution
image: onegreyonewhite/tox:tox

variables:
  TESTS: "polemarch.main.tests"
  GET_SOURCES_ATTEMPTS: 3
  ARTIFACT_DOWNLOAD_ATTEMPTS: 3
  RESTORE_CACHE_ATTEMPTS: 3
  DJANGO_LOG_LEVEL: 'ERROR'
  TOX_ARGS: "--workdir /cache/.tox_polemarch_${CI_BUILD_REF_NAME}"
  CCACHE_DIR: /cache/.ccache
  CC: ccache gcc

stages:
  - code_standarts
  - build
  - test
  - packaging-test
  - release
  - publish

# Test templates
###########################################
.branch_tests_template: &branch_tests
  stage: test
  image: onegreyonewhite/tox:tox
  variables:
    TOX_ENVS: ""
  script:
   - make test ENVS=$TOX_ENVS
   - make build-clean
  except:
    refs:
      - GUI
      - master
      - tags
      - issue_building
  only:
    refs:
      - merge_requests
      - web
    changes:
      - polemarch/main/**/*
      - polemarch/api/**/*
      - tests.py
      - setup.{py,cfg}
      - MANIFEST.in
      - requirements.txt
      - requirements-test.txt
      - Makefile
      - tox.ini
      - .coveragerc
      - .gitlab-ci.yml
  retry: 2

.pack_tamplate: &packing-test
  stage: packaging-test
  image: onegreyonewhite/tox:tox
  variables:
    MYSQL_ROOT_PASSWORD: 'polemarch'
    MYSQL_DATABASE: 'polemarch'
    MYSQL_USER: 'polemarch'
    MYSQL_PASSWORD: 'polemarch'
  services:
    - name: 'mariadb:latest'
      alias: 'db-server'
    - name: 'redis'
      alias: 'redis-server'
  artifacts:
    name: "package($CI_BUILD_NAME)"
    expire_in: 1 hour
    paths:
    - dist/
  allow_failure: false
  only:
    - master
    - issue_building
  retry: 2


# Branch tests
###########################################
code_style:
  stage: code_standarts
  image: onegreyonewhite/tox:tox
  variables:
    TOX_ARGS: "--workdir /cache/.tox_polemarch_code"
  script:
   - make test ENVS=flake,pylint
  except:
    refs:
      - tags
      - issue_building
  only:
    refs:
      - merge_requests
      - web
    changes:
    - polemarch/main/**/*
    - polemarch/api/**/*
    - requirements.txt
    - Makefile
    - tox.ini
    - .pylintrc
    - .pep8
  retry: 2

py27-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py35-coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py36-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

master_coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "py36-coverage"
  except:
  only:
    refs:
      - master

####################################################
# DEPRECATED
.rpm_tests_tamplate: &packing-test-rpm_tests
  <<: *packing-test
  script:
   - cat /etc/hosts
   - tox ${TOX_ARGS} -c tox_build.ini -e py27-rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests --failfast


.deb_tests_tamplate: &packing-test-deb_tests
  <<: *packing-test
  image: onegreyonewhite/tox:ubuntu
  script:
   - cat /etc/hosts
   - tox ${TOX_ARGS} -c tox_build.ini -e py27-deb RELEASE=${CI_BUILD_ID} RELOCATE_BIN=/usr/local/bin/venvctrl-relocate
   - echo "echo 'hello'" > /bin/systemctl
   - sudo apt update
   - sudo apt install ./dist/*.deb -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests --failfast


default_rpm_tests:
  <<: *packing-test-rpm_tests


default_deb_tests:
  <<: *packing-test-deb_tests


developer_rpm_tests:
  <<: *packing-test-rpm_tests
  stage: release
  only:
    refs:
    - developer
  when: manual
  allow_failure: true

developer_deb_tests:
  <<: *packing-test-deb_tests
  stage: release
  only:
    refs:
    - developer
  when: manual
  allow_failure: true

# Realese
###########################################
pages:
  stage: release
  script:
    - make test ENVS=builddoc
    - mv doc/_build/html public
  artifacts:
    paths:
    - public
  only:
    refs:
      - developer
  when: always

release_pypi:
  stage: release
  image: onegreyonewhite/tox:centos6
  only:
    refs:
    - tags
    variables:
    - $PYPI_UPLOAD_PASSWORD
  script:
   - make test ENVS=build
  allow_failure: true
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

publish_pypi:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  only:
    refs:
      - tags
    variables:
      - $PYPI_UPLOAD_PASSWORD
  script:
  - twine upload -u ${PYPI_UPLOAD_NAME} -p ${PYPI_UPLOAD_PASSWORD} dist/*.tar.gz dist/*.whl

# DEPRECATED
#release_rpm:
#  stage: release
#  only:
#    refs:
#    - tags
#    variables:
#    - $PYPI_UPLOAD_PASSWORD
#  script:
#   - tox ${TOX_ARGS} -c tox_build.ini -e py27-rpm
#  allow_failure: false
#  artifacts:
#    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
#    paths:
#    - dist/

# DEPRECATED
#release_deb:
#  stage: release
#  only:
#    refs:
#    - tags
#    variables:
#    - $PYPI_UPLOAD_PASSWORD
#  image: onegreyonewhite/tox:ubuntu
#  script:
#   - tox ${TOX_ARGS} -c tox_build.ini -e py27-deb
#  allow_failure: false
#  artifacts:
#    name: "release-deb-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
#    paths:
#    - dist/

publish_release:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  allow_failure: true
  only:
    refs:
    - tags
    variables:
    - $PYPI_UPLOAD_PASSWORD
  before_script:
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git push https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/vstconsulting/polemarch.git "${CI_COMMIT_TAG}"
  script:
  - make test ENVS=release
