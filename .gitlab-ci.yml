image: onegreyonewhite/tox:tox

variables:
  TESTS: "polemarch.main.tests"

stages:
  - code_standarts
  - build
  - test
  - packaging-test
  - release


.branch_tests_template: &branch_tests
  stage: test
  variables:
    TOX_ENVS: ""
  script:
   - make test ENVS=$TOX_ENVS
   - make build-clean
   - coverage html
  artifacts:
    name: "coverage_branch(${CI_BUILD_REF_NAME})_${CI_BUILD_ID}"
    expire_in: 1 hour
    paths:
    - htmlcov/
    - dist/
  except:
    - master
    - GUI
    - tags


.pack_tamplate: &packing-test
  stage: packaging-test
  artifacts:
    name: "package($CI_BUILD_NAME)"
    expire_in: 1 hour
    paths:
    - dist/
  allow_failure: false
  only:
    - /^issue_.*$/
    - developer
    - master
    - make_bin_packages


.tests_template: &tests_template
  stage: test
  only:
   - master
  script:
   - make test ENVS=$CI_BUILD_NAME-install
  dependencies:
  - build_zip


# Branch tests
###########################################
code_style:
  stage: code_standarts
  script:
   - make test ENVS=pep,flake,pylint
  only:
    - /^issue_.*$/

py27-django18-coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py34-django111-coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

default_rpm_tests:
  <<: *packing-test
  script:
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_oracle_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:oracle
  script:
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_deb_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:ubuntu
  script:
   - make deb
   - echo "echo 'hello'" > /bin/systemctl
   - sudo apt install ./dist/*.deb -y -q
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests


# Master tests
###########################################
build_zip:
  stage: build
  only:
   - master
  script:
   - make rpm RELEASE=${CI_BUILD_ID}
  artifacts:
    expire_in: 20 minutes
    paths:
    - dist/

py27-django18:
  <<: *tests_template
py27-django19:
  <<: *tests_template
py27-django110:
  <<: *tests_template
py27-django111:
  <<: *tests_template
py34-django18:
  <<: *tests_template
py34-django19:
  <<: *tests_template
py34-django110:
  <<: *tests_template
py34-django111:
  <<: *tests_template
py35-django111:
  <<: *tests_template
  image: onegreyonewhite/tox:ubuntu


pep8_checks:
  stage: code_standarts
  only:
   - master
   - developer
  script:
   - make test ENVS=pep,flake
  allow_failure: false

pylint_checks:
  stage: code_standarts
  only:
   - master
   - developer
  script:
   - make test ENVS=pylint
  allow_failure: false


# Realese
###########################################
release_rpm:
  stage: release
  only:
   - tags
  script:
   - make rpm
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_deb:
  stage: release
  only:
   - tags
  image: onegreyonewhite/tox:ubuntu
  script:
   - make deb
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_pypi:
  stage: release
  only:
   - tags
  script:
   - python2 setup.py compile
   - twine upload -u ${PYPI_UPLOAD_NAME} -p ${PYPI_UPLOAD_PASSWORD} dist/*.tar.gz
  allow_failure: true
  when: manual
