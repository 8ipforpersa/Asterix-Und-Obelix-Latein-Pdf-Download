# set to local images because too long execution
image: onegreyonewhite/tox:tox

variables:
  TESTS: "polemarch.main.tests"
  GET_SOURCES_ATTEMPTS: 3
  ARTIFACT_DOWNLOAD_ATTEMPTS: 3
  RESTORE_CACHE_ATTEMPTS: 3
  DJANGO_LOG_LEVEL: 'ERROR'
  PUBLISH_REMOTE_NAME: "${CI_JOB_NAME}_public_${CI_COMMIT_TAG}"
  PUBLISH_REMOTE_USER: ""
  PUBLISH_REMOTE_TOKEN: ""
  PUBLISH_REMOTE_AUTH: "${PUBLISH_REMOTE_USER}:${PUBLISH_REMOTE_TOKEN}@"
  PUBLISH_REMOTE_SERVER: "gitlab.com"
  PUBLISH_REMOTE_PROJECT: "vstconsulting/polemarch"
  PUBLISH_REMOTE_PROJECT_SUFFIX: ".git"
  PUBLISH_REMOTE_URL_SCHEMA: "https://"
  PUBLISH_REMOTE_URI: "${PUBLISH_REMOTE_URL_SCHEMA}${PUBLISH_REMOTE_AUTH}${PUBLISH_REMOTE_SERVER}/${PUBLISH_REMOTE_PROJECT}${PUBLISH_REMOTE_PROJECT_SUFFIX}"

stages:
  - code_standarts
  - build
  - test
  - packaging-test
  - release
  - publish

# Test templates
###########################################
.branch_tests_template: &branch_tests
  stage: test
  image: onegreyonewhite/tox:tox
  variables:
    TOX_ENVS: ""
    TOX_ARGS: "--workdir /cache/.tox_polemarch_${CI_BUILD_REF_NAME}"
  script:
   - make test TOX_ARGS=$TOX_ARGS ENVS=$TOX_ENVS
   - make build-clean
  except:
    - GUI
    - tags
  retry: 2

#.pack_tamplate: &packing-test
#  stage: packaging-test
#  image: onegreyonewhite/tox:tox
#  variables:
#    MYSQL_ROOT_PASSWORD: 'polemarch'
#    MYSQL_DATABASE: 'polemarch'
#    MYSQL_USER: 'polemarch'
#    MYSQL_PASSWORD: 'polemarch'
#    RABBITMQ_DEFAULT_USER: 'polemarch'
#    RABBITMQ_DEFAULT_PASS: 'polemarch'
#    RABBITMQ_DEFAULT_VHOST: 'polemarch'
#  services:
#    - name: 'mysql:latest'
#      alias: 'db-server'
#    - name: 'memcached'
#      alias: 'cache-server'
#    - name: 'memcached'
#      alias: 'locks-server'
#    - name: 'rabbitmq:latest'
#      alias: 'rabbitmq-server'
#  artifacts:
#    name: "package($CI_BUILD_NAME)"
#    expire_in: 1 hour
#    paths:
#    - dist/
#  allow_failure: false
#  only:
#    - master
#  retry: 2

.publish_template: &publishing
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  allow_failure: true
  only:
   - tags
  before_script:
  - git remote add ${PUBLISH_REMOTE_NAME} ${PUBLISH_REMOTE_URI}
  script:
  - git push -f ${PUBLISH_REMOTE_NAME} master
  - git push -f ${PUBLISH_REMOTE_NAME} ${CI_COMMIT_TAG}

# Branch tests
###########################################
code_style:
  stage: code_standarts
  image: onegreyonewhite/tox:tox
  script:
   - make test ENVS=flake,pylint
  only:
    - /^.{0,}issue_.*$/
    - developer
    - master
  retry: 2

py27-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py36-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

####################################################
# DEPRECATED
#default_rpm_tests:
#  <<: *packing-test
#  script:
#   - cat /etc/hosts
#   - tox -e rpm RELEASE=${CI_BUILD_ID}
#   - sudo yum install dist/*.rpm -y -q
#   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
#   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
#   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
#   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests
#
#default_oracle_tests:
#  <<: *packing-test
#  image: onegreyonewhite/tox:oracle
#  script:
#   - cat /etc/hosts
#   - tox -e rpm RELEASE=${CI_BUILD_ID}
#   - sudo yum install dist/*.rpm -y -q
#   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
#   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
#   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
#   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests
#
#default_deb_tests:
#  <<: *packing-test
#  image: onegreyonewhite/tox:ubuntu
#  script:
#   - cat /etc/hosts
#   - tox -e deb RELEASE=${CI_BUILD_ID} RELOCATE_BIN=/usr/local/bin/venvctrl-relocate
#   - echo "echo 'hello'" > /bin/systemctl
#   - sudo apt install ./dist/*.deb -y -q
#   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
#   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
#   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
#   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

# Realese
###########################################
pages_docs:
  stage: release
  script:
    - tox -e build
    - mv polemarch/doc/html/ public/
  artifacts:
    paths:
    - public
  only:
    - master

release_rpm:
  stage: release
  only:
   - tags
  script:
#   - make rpm
   - make test ENVS=rpm
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_deb:
  stage: release
  only:
   - tags
  image: onegreyonewhite/tox:ubuntu
  script:
   # - make deb RELOCATE_BIN=/usr/local/bin/venvctrl-relocate
   - make test ENVS=deb
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_pypi:
  stage: release
  only:
   - tags
  before_script:
  - pip install vstcompile[doc]
  script:
#   - make compile
   - make test ENVS=build
  allow_failure: true
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

publish_pypi:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  only:
   - tags
  script:
  - twine upload -u ${PYPI_UPLOAD_NAME} -p ${PYPI_UPLOAD_PASSWORD} dist/*.tar.gz

publish_gitlab:
  <<: *publishing
  variables:
    PUBLISH_REMOTE_USER: "gitlab-ci-token"
    PUBLISH_REMOTE_TOKEN: "${GITLAB_TOKEN}"

publish_release:
  <<: *publishing
  variables:
    PUBLISH_REMOTE_USER: "${GITHUB_USER}"
    PUBLISH_REMOTE_TOKEN: "${GITHUB_TOKEN}"
    PUBLISH_REMOTE_SERVER: 'github.com'
  after_script:
  - make test ENVS=release
