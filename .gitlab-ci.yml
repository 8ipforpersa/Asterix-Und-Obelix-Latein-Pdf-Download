# set to local images because too long execution
image: onegreyonewhite/tox:tox

variables:
  TESTS: "polemarch.main.tests"
  GET_SOURCES_ATTEMPTS: 3
  ARTIFACT_DOWNLOAD_ATTEMPTS: 3
  RESTORE_CACHE_ATTEMPTS: 3
  DJANGO_LOG_LEVEL: 'CRITICAL'

cache:
  paths:
    - .tox/


stages:
  - code_standarts
  - build
  - test
  - packaging-test
  - release


.branch_tests_template: &branch_tests
  stage: test
  image: onegreyonewhite/tox:tox
  variables:
    TOX_ENVS: ""
  script:
   - make test ENVS=$TOX_ENVS
   - make build-clean
   - coverage html
  artifacts:
    name: "coverage_branch(${CI_BUILD_REF_NAME})_${CI_BUILD_ID}"
    expire_in: 1 hour
    paths:
    - htmlcov/
    - dist/
  except:
    - master
    - GUI
    - tags
  retry: 2


.pack_tamplate: &packing-test
  stage: packaging-test
  image: onegreyonewhite/tox:tox
  variables:
    MYSQL_ROOT_PASSWORD: 'polemarch'
    MYSQL_DATABASE: 'polemarch'
    MYSQL_USER: 'polemarch'
    MYSQL_PASSWORD: 'polemarch'
    RABBITMQ_DEFAULT_USER: 'polemarch'
    RABBITMQ_DEFAULT_PASS: 'polemarch'
    RABBITMQ_DEFAULT_VHOST: 'polemarch'
  services:
    - name: 'mysql:latest'
      alias: 'db-server'
    - name: 'memcached'
      alias: 'cache-server'
    - name: 'memcached'
      alias: 'locks-server'
    - name: 'rabbitmq:latest'
      alias: 'rabbitmq-server'
  artifacts:
    name: "package($CI_BUILD_NAME)"
    expire_in: 1 hour
    paths:
    - dist/
  allow_failure: false
  only:
    # - /^issue_.*$/
    - developer
    # - master
    - make_bin_packages
  retry: 2


.tests_template: &tests_template
  stage: test
  only:
   - master
  script:
   - make test ENVS=$CI_BUILD_NAME-сщмукфпу
  dependencies:
  - build_zip
  retry: 2


# Branch tests
###########################################
code_style:
  stage: code_standarts
  image: onegreyonewhite/tox:tox
  script:
   - make test ENVS=flake,pylint
  only:
    - /^.{0,}issue_.*$/
    - developer
  retry: 2

py27-django111-coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py36-django111-coverage:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

default_rpm_tests:
  <<: *packing-test
  script:
   - cat /etc/hosts
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_oracle_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:oracle
  script:
   - cat /etc/hosts
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_deb_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:ubuntu
  script:
   - cat /etc/hosts
   - make deb RELEASE=${CI_BUILD_ID}
   - echo "echo 'hello'" > /bin/systemctl
   - sudo apt install ./dist/*.deb -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests


# Master tests
###########################################
build_zip:
  stage: build
  only:
   - master
  script:
   - make build RELEASE=${CI_BUILD_ID}
  artifacts:
    expire_in: 30 minutes
    paths:
    - dist/
  retry: 2

py27-django111:
  <<: *tests_template
py35-django111:
  <<: *tests_template
py36-django111:
  <<: *tests_template

pep8_checks:
  stage: code_standarts
  only:
   - master
  script:
   - make test ENVS=flake
  allow_failure: false
  retry: 2

pylint_checks:
  stage: code_standarts
  only:
   - master
  script:
   - make test ENVS=pylint
  allow_failure: false
  retry: 2


# Realese
###########################################
release_rpm:
  stage: release
  only:
   - tags
  script:
   - make rpm
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_deb:
  stage: release
  only:
   - tags
  image: onegreyonewhite/tox:ubuntu
  script:
   - make deb
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_pypi:
  stage: release
  only:
   - tags
  script:
   - python2 setup.py compile
   - twine upload -u ${PYPI_UPLOAD_NAME} -p ${PYPI_UPLOAD_PASSWORD} dist/*.tar.gz
  allow_failure: true
  when: manual
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/
