swagger: '2.0'
info:
  title: API
  description: POLEMARCH API-v1
  termsOfService: ''
  contact:
    name: System Administrator
  version: v2
host: localhost:8080
schemes:
  - http
basePath: /api/v2
consumes:
  - application/json
produces:
  - application/json
  - multipart/form-data; boundary=BoUnDaRyStRiNg
securityDefinitions:
  basic:
    type: basic
security:
  - basic: []
paths:
  /group/:
    get:
      operationId: group_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - group
    post:
      operationId: group_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    parameters: []
  /group/{pk}/:
    get:
      operationId: group_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    put:
      operationId: group_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    patch:
      operationId: group_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    delete:
      operationId: group_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/group/:
    get:
      operationId: group_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - group
    post:
      operationId: group_group_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/group/{group_id}/:
    get:
      operationId: group_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    put:
      operationId: group_group_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    patch:
      operationId: group_group_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    delete:
      operationId: group_group_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/group/{group_id}/variables/:
    get:
      operationId: group_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    post:
      operationId: group_group_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: group_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    put:
      operationId: group_group_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    patch:
      operationId: group_group_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    delete:
      operationId: group_group_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /group/{pk}/host/:
    get:
      operationId: group_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - group
    post:
      operationId: group_host_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/host/{host_id}/:
    get:
      operationId: group_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    put:
      operationId: group_host_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    patch:
      operationId: group_host_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    delete:
      operationId: group_host_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/host/{host_id}/set_owner/:
    post:
      operationId: group_host_host_set_owner
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/host/{host_id}/variables/:
    get:
      operationId: group_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    post:
      operationId: group_host_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: group_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    put:
      operationId: group_host_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    patch:
      operationId: group_host_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    delete:
      operationId: group_host_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /group/{pk}/set_owner/:
    post:
      operationId: group_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/variables/:
    get:
      operationId: group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    post:
      operationId: group_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{pk}/variables/{variables_id}/:
    get:
      operationId: group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    put:
      operationId: group_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    patch:
      operationId: group_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - group
    delete:
      operationId: group_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - group
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /history/:
    get:
      operationId: history_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: mode
          in: query
          description: ''
          required: false
          type: string
        - name: kind
          in: query
          description: ''
          required: false
          type: string
        - name: project
          in: query
          description: ''
          required: false
          type: string
        - name: status
          in: query
          description: ''
          required: false
          type: string
        - name: inventory
          in: query
          description: ''
          required: false
          type: string
        - name: start_time
          in: query
          description: ''
          required: false
          type: string
        - name: stop_time
          in: query
          description: ''
          required: false
          type: string
        - name: initiator
          in: query
          description: ''
          required: false
          type: number
        - name: initiator_type
          in: query
          description: ''
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: start_time__gt
          in: query
          description: Start time to search.
          required: false
          type: string
        - name: stop_time__gt
          in: query
          description: Stop time to search.
          required: false
          type: string
        - name: start_time__lt
          in: query
          description: Start time to search.
          required: false
          type: string
        - name: stop_time__lt
          in: query
          description: Stop time to search.
          required: false
          type: string
        - name: start_time__gte
          in: query
          description: Start time to search.
          required: false
          type: string
        - name: stop_time__gte
          in: query
          description: Stop time to search.
          required: false
          type: string
        - name: start_time__lte
          in: query
          description: Start time to search.
          required: false
          type: string
        - name: stop_time__lte
          in: query
          description: Stop time to search.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/History'
      tags:
        - history
    parameters: []
  /history/{pk}/:
    get:
      operationId: history_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - history
    delete:
      operationId: history_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - history
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{pk}/cancel/:
    post:
      operationId: history_cancel
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Data'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - history
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{pk}/clear/:
    delete:
      operationId: history_clear
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - history
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{pk}/facts/:
    get:
      operationId: history_facts
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - history
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /hook/:
    get:
      operationId: hook_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: ''
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Hook'
      tags:
        - hook
    post:
      operationId: hook_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    parameters: []
  /hook/{pk}/:
    get:
      operationId: hook_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    put:
      operationId: hook_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    patch:
      operationId: hook_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    delete:
      operationId: hook_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - hook
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this hook.
        required: true
        type: integer
  /host/:
    get:
      operationId: host_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: ''
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - host
    post:
      operationId: host_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    parameters: []
  /host/{pk}/:
    get:
      operationId: host_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    put:
      operationId: host_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    patch:
      operationId: host_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    delete:
      operationId: host_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - host
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{pk}/set_owner/:
    post:
      operationId: host_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - host
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{pk}/variables/:
    get:
      operationId: host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - host
    post:
      operationId: host_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - host
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{pk}/variables/{variables_id}/:
    get:
      operationId: host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - host
    put:
      operationId: host_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - host
    patch:
      operationId: host_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - host
    delete:
      operationId: host_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - host
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /inventory/:
    get:
      operationId: inventory_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
      tags:
        - inventory
    post:
      operationId: inventory_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    parameters: []
  /inventory/{pk}/:
    get:
      operationId: inventory_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    put:
      operationId: inventory_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    patch:
      operationId: inventory_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    delete:
      operationId: inventory_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/all_groups/:
    get:
      operationId: inventory_all_groups_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/all_groups/{all_groups_id}/:
    get:
      operationId: inventory_all_groups_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    parameters:
      - name: all_groups_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/all_hosts/:
    get:
      operationId: inventory_all_hosts_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/all_hosts/{all_hosts_id}/:
    get:
      operationId: inventory_all_hosts_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    parameters:
      - name: all_hosts_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/group/:
    get:
      operationId: inventory_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - inventory
    post:
      operationId: inventory_group_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/group/{group_id}/:
    get:
      operationId: inventory_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    put:
      operationId: inventory_group_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    patch:
      operationId: inventory_group_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    delete:
      operationId: inventory_group_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/group/{group_id}/variables/:
    get:
      operationId: inventory_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    post:
      operationId: inventory_group_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    put:
      operationId: inventory_group_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    patch:
      operationId: inventory_group_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    delete:
      operationId: inventory_group_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /inventory/{pk}/host/:
    get:
      operationId: inventory_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - inventory
    post:
      operationId: inventory_host_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/host/{host_id}/:
    get:
      operationId: inventory_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    put:
      operationId: inventory_host_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    patch:
      operationId: inventory_host_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    delete:
      operationId: inventory_host_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/host/{host_id}/set_owner/:
    post:
      operationId: inventory_host_host_set_owner
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/host/{host_id}/variables/:
    get:
      operationId: inventory_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    post:
      operationId: inventory_host_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: inventory_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    put:
      operationId: inventory_host_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    patch:
      operationId: inventory_host_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    delete:
      operationId: inventory_host_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /inventory/{pk}/set_owner/:
    post:
      operationId: inventory_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/variables/:
    get:
      operationId: inventory_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    post:
      operationId: inventory_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{pk}/variables/{variables_id}/:
    get:
      operationId: inventory_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    put:
      operationId: inventory_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    patch:
      operationId: inventory_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - inventory
    delete:
      operationId: inventory_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - inventory
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/:
    get:
      operationId: project_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: status
          in: query
          description: ''
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: status__not
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Project'
      tags:
        - project
    post:
      operationId: project_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneProject'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    parameters: []
  /project/{pk}/:
    get:
      operationId: project_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    put:
      operationId: project_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    patch:
      operationId: project_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    delete:
      operationId: project_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/execute-module/:
    post:
      operationId: project_execute_module
      description: Execute ansible module.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AnsibleModule'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/execute-playbook/:
    post:
      operationId: project_execute_playbook
      description: Execute ansible module.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AnsiblePlaybook'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/group/:
    get:
      operationId: project_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    post:
      operationId: project_group_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/group/{group_id}/:
    get:
      operationId: project_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    put:
      operationId: project_group_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    patch:
      operationId: project_group_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    delete:
      operationId: project_group_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/group/{group_id}/variables/:
    get:
      operationId: project_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_group_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: project_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_group_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_group_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_group_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/history/:
    get:
      operationId: project_history_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/History'
      tags:
        - project
    post:
      operationId: project_history_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/History'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/History'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/:
    get:
      operationId: project_history_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - project
    put:
      operationId: project_history_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHistory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - project
    patch:
      operationId: project_history_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHistory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - project
    delete:
      operationId: project_history_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/cancel/:
    post:
      operationId: project_history_history_cancel
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Data'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/clear/:
    delete:
      operationId: project_history_history_clear
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/facts/:
    get:
      operationId: project_history_history_facts
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/lines/:
    get:
      operationId: project_history_history_lines_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/HistoryLines'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/history/{history_id}/raw/:
    get:
      operationId: project_history_history_raw
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/host/:
    get:
      operationId: project_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    post:
      operationId: project_host_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/host/{host_id}/:
    get:
      operationId: project_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    put:
      operationId: project_host_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    patch:
      operationId: project_host_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    delete:
      operationId: project_host_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/host/{host_id}/set_owner/:
    post:
      operationId: project_host_host_set_owner
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/host/{host_id}/variables/:
    get:
      operationId: project_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_host_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: project_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_host_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_host_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_host_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/inventory/:
    get:
      operationId: project_inventory_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Inventory'
      tags:
        - project
    post:
      operationId: project_inventory_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Inventory'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/:
    get:
      operationId: project_inventory_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    put:
      operationId: project_inventory_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    patch:
      operationId: project_inventory_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    delete:
      operationId: project_inventory_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/all_groups/:
    get:
      operationId: project_inventory_inventory_all_groups_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/all_groups/{all_groups_id}/:
    get:
      operationId: project_inventory_inventory_all_groups_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    parameters:
      - name: all_groups_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/all_hosts/:
    get:
      operationId: project_inventory_inventory_all_hosts_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/all_hosts/{all_hosts_id}/:
    get:
      operationId: project_inventory_inventory_all_hosts_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    parameters:
      - name: all_hosts_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/group/:
    get:
      operationId: project_inventory_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    post:
      operationId: project_inventory_group_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/group/{group_id}/:
    get:
      operationId: project_inventory_group_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    put:
      operationId: project_inventory_group_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    patch:
      operationId: project_inventory_group_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    delete:
      operationId: project_inventory_group_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/group/{group_id}/variables/:
    get:
      operationId: project_inventory_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_inventory_group_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_inventory_group_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_inventory_group_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_inventory_group_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/inventory/{inventory_id}/host/:
    get:
      operationId: project_inventory_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    post:
      operationId: project_inventory_host_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/host/{host_id}/:
    get:
      operationId: project_inventory_host_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    put:
      operationId: project_inventory_host_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    patch:
      operationId: project_inventory_host_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    delete:
      operationId: project_inventory_host_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/host/{host_id}/set_owner/:
    post:
      operationId: project_inventory_host_inventory_host_set_owner
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/host/{host_id}/variables/:
    get:
      operationId: project_inventory_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_inventory_host_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_host_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_inventory_host_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_inventory_host_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_inventory_host_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/inventory/{inventory_id}/set_owner/:
    post:
      operationId: project_inventory_inventory_set_owner
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/variables/:
    get:
      operationId: project_inventory_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_inventory_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/inventory/{inventory_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_inventory_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_inventory_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_inventory_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: inventory_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/module/:
    get:
      operationId: project_module_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Module'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/module/{module_id}/:
    get:
      operationId: project_module_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneModule'
      tags:
        - project
    parameters:
      - name: module_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/periodic_task/:
    get:
      operationId: project_periodic_task_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Periodictask'
      tags:
        - project
    post:
      operationId: project_periodic_task_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Periodictask'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Periodictask'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/periodic_task/{periodic_task_id}/:
    get:
      operationId: project_periodic_task_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    put:
      operationId: project_periodic_task_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OnePeriodictask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    patch:
      operationId: project_periodic_task_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OnePeriodictask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    delete:
      operationId: project_periodic_task_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: periodic_task_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/periodic_task/{periodic_task_id}/execute/:
    post:
      operationId: project_periodic_task_periodic_task_execute
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Periodictask'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Periodictask'
      tags:
        - project
    parameters:
      - name: periodic_task_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/periodic_task/{periodic_task_id}/variables/:
    get:
      operationId: project_periodic_task_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    post:
      operationId: project_periodic_task_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    parameters:
      - name: periodic_task_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/periodic_task/{periodic_task_id}/variables/{variables_id}/:
    get:
      operationId: project_periodic_task_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    put:
      operationId: project_periodic_task_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    patch:
      operationId: project_periodic_task_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variable'
      tags:
        - project
    delete:
      operationId: project_periodic_task_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: periodic_task_id
        in: path
        required: true
        type: string
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /project/{pk}/playbook/:
    get:
      operationId: project_playbook_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Playbook'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/playbook/{playbook_id}/:
    get:
      operationId: project_playbook_detail
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OnePlaybook'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: playbook_id
        in: path
        required: true
        type: string
  /project/{pk}/set_owner/:
    post:
      operationId: project_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/sync/:
    post:
      operationId: project_sync
      description: Sync project repository.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ActionResponse'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/template/:
    get:
      operationId: project_template_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Template'
      tags:
        - project
    post:
      operationId: project_template_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Template'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/template/{template_id}/:
    get:
      operationId: project_template_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    put:
      operationId: project_template_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTemplate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    patch:
      operationId: project_template_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTemplate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    delete:
      operationId: project_template_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: template_id
        in: path
        required: true
        type: string
  /project/{pk}/template/{template_id}/execute/:
    post:
      operationId: project_template_template_execute
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TemplateExec'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TemplateExec'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: template_id
        in: path
        required: true
        type: string
  /project/{pk}/variables/:
    get:
      operationId: project_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    post:
      operationId: project_variables_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{pk}/variables/{variables_id}/:
    get:
      operationId: project_variables_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    put:
      operationId: project_variables_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    patch:
      operationId: project_variables_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    delete:
      operationId: project_variables_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - project
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: string
  /team/:
    get:
      operationId: team_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Team'
      tags:
        - team
    post:
      operationId: team_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    parameters: []
  /team/{pk}/:
    get:
      operationId: team_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    put:
      operationId: team_update
      description: API endpoint to update all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    patch:
      operationId: team_edit
      description: API endpoint to update part of all instance fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    delete:
      operationId: team_remove
      description: API endpoint to instance.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - team
    parameters:
      - name: pk
        in: path
        description: A unique value identifying this user group.
        required: true
        type: string
  /team/{pk}/set_owner/:
    post:
      operationId: team_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - team
    parameters:
      - name: pk
        in: path
        description: A unique value identifying this user group.
        required: true
        type: string
  /team/{pk}/user/:
    get:
      operationId: team_user_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - team
    post:
      operationId: team_user_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - team
    parameters:
      - name: pk
        in: path
        description: A unique value identifying this user group.
        required: true
        type: string
  /team/{pk}/user/{user_id}/:
    get:
      operationId: team_user_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - team
    put:
      operationId: team_user_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneOwner'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - team
    patch:
      operationId: team_user_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneOwner'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - team
    delete:
      operationId: team_user_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - team
    parameters:
      - name: pk
        in: path
        description: A unique value identifying this user group.
        required: true
        type: string
      - name: user_id
        in: path
        required: true
        type: string
  /team/{pk}/user/{user_id}/settings/:
    get:
      operationId: team_user_settings_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - team
    post:
      operationId: team_user_settings_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Data'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - team
    delete:
      operationId: team_user_settings_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - team
    parameters:
      - name: pk
        in: path
        description: A unique value identifying this user group.
        required: true
        type: string
      - name: user_id
        in: path
        required: true
        type: string
  /user/:
    get:
      operationId: user_list
      description: ''
      parameters:
        - name: id
          in: query
          description: ''
          required: false
          type: string
        - name: username
          in: query
          description: ''
          required: false
          type: string
        - name: is_active
          in: query
          description: ''
          required: false
          type: string
        - name: first_name
          in: query
          description: ''
          required: false
          type: string
        - name: last_name
          in: query
          description: ''
          required: false
          type: string
        - name: email
          in: query
          description: ''
          required: false
          type: string
        - name: id__not
          in: query
          description: ''
          required: false
          type: string
        - name: username__not
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - user
    post:
      operationId: user_add
      description: API endpoint to create instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneOwner'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - user
    parameters: []
  /user/{pk}/:
    get:
      operationId: user_get
      description: API endpoint to represent instance detailed data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - user
    put:
      operationId: user_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneOwner'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - user
    patch:
      operationId: user_edit
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneOwner'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OneOwner'
      tags:
        - user
    delete:
      operationId: user_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - user
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /user/{pk}/settings/:
    get:
      operationId: user_settings_get
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - user
    post:
      operationId: user_settings_add
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Data'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Data'
      tags:
        - user
    delete:
      operationId: user_settings_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - user
    parameters:
      - name: pk
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  Group:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      children:
        title: Children
        type: boolean
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  User:
    title: Owner
    required:
      - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
    readOnly: true
  OneGroup:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      children:
        title: Children
        type: boolean
      owner:
        $ref: '#/definitions/User'
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  Variable:
    required:
      - key
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        maxLength: 128
        minLength: 1
      value:
        title: Value
        type: string
        default: ''
  Host:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        maxLength: 5
        minLength: 1
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneHost:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      type:
        title: Type
        type: string
        maxLength: 5
        minLength: 1
      owner:
        $ref: '#/definitions/User'
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  SetOwner:
    required:
      - user_id
    type: object
    properties:
      user_id:
        title: User id
        type: integer
  History:
    required:
      - mode
      - status
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      project:
        title: Project
        type: integer
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      status:
        title: Status
        type: string
        maxLength: 50
        minLength: 1
      inventory:
        title: Inventory
        type: integer
      start_time:
        title: Start time
        type: string
        format: date-time
      stop_time:
        title: Stop time
        type: string
        format: date-time
      initiator:
        title: Initiator
        type: integer
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      executor:
        title: Executor
        type: integer
      revision:
        title: Revision
        type: string
        maxLength: 256
      options:
        title: Options
        type: string
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneHistory:
    required:
      - mode
      - status
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      project:
        title: Project
        type: integer
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      status:
        title: Status
        type: string
        maxLength: 50
        minLength: 1
      start_time:
        title: Start time
        type: string
        format: date-time
      stop_time:
        title: Stop time
        type: string
        format: date-time
      execution_time:
        title: Execution time
        type: string
        readOnly: true
      inventory:
        title: Inventory
        type: integer
      raw_inventory:
        title: Raw inventory
        type: string
        minLength: 1
      raw_args:
        title: Raw args
        type: string
        minLength: 1
      raw_stdout:
        title: Raw stdout
        type: string
        readOnly: true
      initiator:
        title: Initiator
        type: integer
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      executor:
        title: Executor
        type: integer
      execute_args:
        title: Execute args
        type: string
        readOnly: true
      revision:
        title: Revision
        type: string
        maxLength: 256
      options:
        title: Options
        type: string
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  Data:
    type: object
    properties: {}
  Hook:
    required:
      - type
      - recipients
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - HTTP
          - SCRIPT
      when:
        title: When
        type: string
        enum:
          - on_execution
          - on_user_del
          - after_execution
          - on_object_del
          - on_user_upd
          - on_user_add
          - on_object_upd
          - on_object_add
      enable:
        title: Enable
        type: boolean
      recipients:
        title: Recipients
        type: string
        maxLength: 20000
        minLength: 1
  Inventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneInventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      owner:
        $ref: '#/definitions/User'
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  Project:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      status:
        title: Status
        type: string
        readOnly: true
        minLength: 1
      type:
        title: Type
        type: string
        readOnly: true
        minLength: 1
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneProject:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      status:
        title: Status
        type: string
        readOnly: true
        minLength: 1
      repository:
        title: Repository
        type: string
        default: MANUAL
        minLength: 1
      owner:
        $ref: '#/definitions/User'
      revision:
        title: Revision
        type: string
        readOnly: true
      branch:
        title: Branch
        type: string
        readOnly: true
      readme_content:
        title: Readme content
        type: string
        readOnly: true
      readme_ext:
        title: Readme ext
        type: string
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  AnsibleModule:
    required:
      - module
    type: object
    properties:
      module:
        title: Module
        type: string
        minLength: 1
      module_path:
        title: Module path
        description: prepend colon-separated path(s) to module library (default=['/home/grey/.ansible/plugins/modules',
          '/usr/share/ansible/plugins/modules'])
        type: string
        minLength: 1
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
        default: false
      become_user:
        title: Become user
        description: run operations as this user (default=root)
        type: string
        minLength: 1
      sudo:
        title: Sudo
        description: run operations with sudo (nopasswd) (deprecated, use become)
        type: boolean
        default: false
      args:
        title: Args
        description: module arguments
        type: string
        minLength: 1
      one_line:
        title: One line
        description: condense output
        type: boolean
        default: false
      become_method:
        title: Become method
        description: 'privilege escalation method to use (default=sudo), valid choices:
          [ sudo | su | pbrun | pfexec | doas | dzdo | ksu | runas | pmrun | enable
          | machinectl ]'
        type: string
        minLength: 1
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
        minLength: 1
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
        default: false
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
        minLength: 1
      group:
        title: Group
        type: string
        minLength: 1
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        minLength: 1
      su:
        title: Su
        description: run operations with su (deprecated, use become)
        type: boolean
        default: false
      vault_id:
        title: Vault id
        description: the vault identity to use
        type: string
        minLength: 1
      help:
        title: Help
        description: show this help message and exit
        type: boolean
        default: false
      playbook_dir:
        title: Playbook dir
        description: Since this tool does not use playbooks, use this as a subsitute
          playbook directory.This sets the relative path for many features including
          roles/ group_vars/ etc.
        type: string
        minLength: 1
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        minLength: 1
      poll:
        title: Poll
        description: set the poll interval if using -B (default=15)
        type: integer
      version:
        title: Version
        description: show program's version number and exit
        type: boolean
        default: false
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
        minLength: 1
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
        default: false
      key_file:
        title: Key file
        description: use this file to authenticate the connection
        type: string
        minLength: 1
      tree:
        title: Tree
        description: log output to this directory
        type: string
        minLength: 1
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
        default: false
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
        minLength: 1
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
        minLength: 1
      user:
        title: User
        description: connect as this user (default=None)
        type: string
        minLength: 1
      su_user:
        title: Su user
        description: run operations with su as this user (default=None) (deprecated,
          use become)
        type: string
        minLength: 1
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
        minLength: 1
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
        minLength: 1
      background:
        title: Background
        description: run asynchronously, failing after X seconds (default=N/A)
        type: integer
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      sudo_user:
        title: Sudo user
        description: desired sudo user (default=root) (deprecated, use become)
        type: string
        minLength: 1
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
        default: false
  ExecuteResponse:
    required:
      - detail
    type: object
    properties:
      detail:
        title: Detail
        type: string
        minLength: 1
      history_id:
        title: History id
        type: integer
      executor:
        title: Executor
        type: integer
  AnsiblePlaybook:
    required:
      - playbook
    type: object
    properties:
      playbook:
        title: Playbook
        type: string
        minLength: 1
      module_path:
        title: Module path
        description: prepend colon-separated path(s) to module library (default=['/home/grey/.ansible/plugins/modules',
          '/usr/share/ansible/plugins/modules'])
        type: string
        minLength: 1
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
        default: false
      become_user:
        title: Become user
        description: run operations as this user (default=root)
        type: string
        minLength: 1
      sudo:
        title: Sudo
        description: run operations with sudo (nopasswd) (deprecated, use become)
        type: boolean
        default: false
      list_tasks:
        title: List tasks
        description: list all tasks that would be executed
        type: boolean
        default: false
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
        minLength: 1
      become_method:
        title: Become method
        description: 'privilege escalation method to use (default=sudo), valid choices:
          [ sudo | su | pbrun | pfexec | doas | dzdo | ksu | runas | pmrun | enable
          | machinectl ]'
        type: string
        minLength: 1
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
        minLength: 1
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
        default: false
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
        minLength: 1
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        minLength: 1
      su:
        title: Su
        description: run operations with su (deprecated, use become)
        type: boolean
        default: false
      vault_id:
        title: Vault id
        description: the vault identity to use
        type: string
        minLength: 1
      help:
        title: Help
        description: show this help message and exit
        type: boolean
        default: false
      flush_cache:
        title: Flush cache
        description: clear the fact cache for every host in inventory
        type: boolean
        default: false
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        minLength: 1
      su_user:
        title: Su user
        description: run operations with su as this user (default=None) (deprecated,
          use become)
        type: string
        minLength: 1
      version:
        title: Version
        description: show program's version number and exit
        type: boolean
        default: false
      skip_tags:
        title: Skip tags
        description: only run plays and tasks whose tags do not match these values
        type: string
        minLength: 1
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
        minLength: 1
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
        default: false
      key_file:
        title: Key file
        description: use this file to authenticate the connection
        type: string
        minLength: 1
      force_handlers:
        title: Force handlers
        description: run handlers even if a task fails
        type: boolean
        default: false
      tags:
        title: Tags
        description: only run plays and tasks tagged with these values
        type: string
        minLength: 1
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
        minLength: 1
      list_tags:
        title: List tags
        description: list all available tags
        type: boolean
        default: false
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
        minLength: 1
      user:
        title: User
        description: connect as this user (default=None)
        type: string
        minLength: 1
      start_at_task:
        title: Start at task
        description: start the playbook at the task matching this name
        type: string
        minLength: 1
      step:
        title: Step
        description: 'one-step-at-a-time: confirm each task before running'
        type: boolean
        default: false
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
        minLength: 1
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
        default: false
      sudo_user:
        title: Sudo user
        description: desired sudo user (default=root) (deprecated, use become)
        type: string
        minLength: 1
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
        default: false
  HistoryLines:
    type: object
    properties:
      line_number:
        title: Line number
        type: integer
      line_gnumber:
        title: Line gnumber
        type: integer
      line:
        title: Line
        type: string
        maxLength: 2048
        minLength: 1
  Module:
    required:
      - path
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
      name:
        title: Name
        type: string
        readOnly: true
  OneModule:
    required:
      - path
      - data
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
      name:
        title: Name
        type: string
        readOnly: true
      data:
        $ref: '#/definitions/Data'
  Periodictask:
    required:
      - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - CRONTAB
          - INTERVAL
        default: CRONTAB
      schedule:
        title: Schedule
        type: string
      mode:
        title: Mode
        type: string
        minLength: 1
      kind:
        title: Kind
        type: string
        enum:
          - PLAYBOOK
          - MODULE
          - TEMPLATE
        default: PLAYBOOK
      inventory:
        title: Inventory
        type: string
        minLength: 1
      save_result:
        title: Save result
        type: boolean
      template:
        title: Template
        type: integer
      template_opt:
        title: Template opt
        type: string
        maxLength: 256
      enabled:
        title: Enabled
        type: boolean
  OnePeriodictask:
    required:
      - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      type:
        title: Type
        type: string
        enum:
          - CRONTAB
          - INTERVAL
        default: CRONTAB
      schedule:
        title: Schedule
        type: string
      mode:
        title: Mode
        type: string
        minLength: 1
      kind:
        title: Kind
        type: string
        enum:
          - PLAYBOOK
          - MODULE
          - TEMPLATE
        default: PLAYBOOK
      project:
        title: Project
        type: integer
      inventory:
        title: Inventory
        type: string
        minLength: 1
      save_result:
        title: Save result
        type: boolean
      template:
        title: Template
        type: integer
      template_opt:
        title: Template opt
        type: string
        maxLength: 256
      enabled:
        title: Enabled
        type: boolean
  Playbook:
    required:
      - playbook
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 256
        minLength: 1
      playbook:
        title: Playbook
        type: string
        maxLength: 256
        minLength: 1
  OnePlaybook:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 256
        minLength: 1
      playbook:
        title: Playbook
        type: string
        readOnly: true
        minLength: 1
  Empty:
    type: object
    properties: {}
  ActionResponse:
    required:
      - detail
    type: object
    properties:
      detail:
        title: Detail
        type: string
        minLength: 1
  Template:
    required:
      - name
      - kind
      - data
      - options
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      kind:
        title: Kind
        type: string
        maxLength: 32
        minLength: 1
      data:
        $ref: '#/definitions/Data'
      options:
        $ref: '#/definitions/Data'
      options_list:
        type: array
        items:
          type: string
        readOnly: true
  OneTemplate:
    required:
      - name
      - kind
      - data
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
      kind:
        title: Kind
        type: string
        maxLength: 32
        minLength: 1
      data:
        $ref: '#/definitions/Data'
      options:
        $ref: '#/definitions/Data'
      options_list:
        type: array
        items:
          type: string
        readOnly: true
  TemplateExec:
    type: object
    properties:
      option:
        title: Option
        description: Option name from template options.
        type: string
        minLength: 0
  ProjectVariable:
    required:
      - key
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        enum:
          - repo_branch
          - repo_type
          - repo_key
          - repo_password
          - repo_sync_on_run
      value:
        title: Value
        type: string
        default: ''
  Team:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 80
        minLength: 1
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneTeam:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 80
        minLength: 1
      notes:
        title: Notes
        type: string
      owner:
        $ref: '#/definitions/User'
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OneOwner:
    required:
      - username
      - password
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      first_name:
        title: First name
        type: string
        maxLength: 30
      last_name:
        title: Last name
        type: string
        maxLength: 30
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
