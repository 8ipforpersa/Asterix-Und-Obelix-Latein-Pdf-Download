[tox]
envlist = flake,pylint,py311-coverage,py36-install
skipsdist = True
setenv = PIP_CONFIG_FILE=.pip.conf
allowlist_externals =
    rm
    bash

[testenv]
setenv =
    CCACHE_DIR = {envdir}/.ccache
    COMPILE_WITH_TESTS = true
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
    SCHEMA_PATH={toxinidir}/doc/api_schema.yaml
passenv =
    DJANGO_LOG_LEVEL
    CC
    BUILD_COMPILE
allowlist_externals =
    rm
    ls
    ln
    bash
    mkdir
commands =
  -pip install -U pip
  install: -pip uninstall polemarch -y
  install: rm -rfv {envdir}/dist/
  install: python setup.py bdist_wheel --dist-dir {envdir}/dist/
  install: bash -c "export BUILD_COMPILE=true; pip install -U {envdir}/dist/$(ls {envdir}/dist)[test]"
  coverage: python setup.py install_egg_info
  coverage: pip install -U -e .[test]
  install: rm -f {envdir}/tests.py {envdir}/tests.pyc
  install: rm -rf {envdir}/test_data
  install: ln -s {toxinidir}/test_data {envdir}/test_data
  install: ln -s {toxinidir}/tests.py {envdir}/tests.py
  install: python -m polemarch test -v 2 --failfast --parallel 8
  coverage: coverage debug sys
  coverage: coverage erase
  coverage: coverage run -m polemarch test -v 2 --failfast --parallel 8 {posargs}
  coverage: coverage combine
  coverage: coverage report
  rm -rf .eggs build polemarch.egg-info {envdir}/dist
deps =
    -rrequirements.txt
    -rrequirements-git.txt
    -rrequirements-test.txt

[testenv:flake]
basepython = python3.8
deps =
    flake8
    -rrequirements.txt
    -rrequirements-git.txt
commands =
  flake8 --config=.pep8 polemarch tests.py

[testenv:pylint]
basepython = python3.8
deps =
    pylint==2.10.2
    pylint-django==2.4.3
    pylint-plugin-utils==0.6.0
    -rrequirements.txt
    -rrequirements-git.txt
commands =
  pip uninstall polemarch -y
  python setup.py install_egg_info
  pip install -U -e .
  pylint --rcfile=./.pylintrc {posargs} polemarch

[testenv:js_style]
changedir = ./
deps =
allowlist_externals = yarn
commands =
  yarn install
  yarn lint

[testenv:build]
basepython = python3.6
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
passenv = *
changedir = .
allowlist_externals =
    tox
    rm
commands =
    rm -rf dist build
    tox -c tox_build.ini -e py36-build,py37-wheel --workdir {toxworkdir}

[testenv:builddoc]
basepython = python3.6
changedir = ./doc/
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
allowlist_externals =
    cp
    make
commands =
    pip install -U -r../requirements-doc.txt
    make html
    # make latexpdf
    # cp -rv _build/html ../public
deps =
  -rrequirements-doc.txt

[testenv:build_for_docker]
basepython = python3.8
skipsdist = True
setenv =
    CCACHE_DIR = {envdir}/.ccache
    BUILD_OPTIMIZATION = true
    BUILD_COMPILE = true
passenv = *
allowlist_externals = *
commands =
    rm -frv {envdir}/dist
    python setup.py compile_docs
    python setup.py bdist_wheel --dist-dir {envdir}/dist/
    bash -c "pip wheel $(find {envdir}/dist/* | head -1)[mysql,postgresql,ansible] -w wheels"
deps =
  -rrequirements-doc.txt
  pip>=20.2
  wheel
  cython

[testenv:release]
basepython = python3.6
toxworkdir = ./
passenv = *
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
allowlist_externals =
    mkdir
    ls
commands =
    mkdir -p dist
    ls -la dist
    python setup.py githubrelease
deps =
    githubrelease

[testenv:contrib]
basepython = python3.6
skipsdist = False
usedevelop = True
envdir = {toxinidir}/env
setenv =
    CCACHE_DIR = {envdir}/.ccache
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
passenv = *
allowlist_externals = *
commands =
    python setup.py install_egg_info
    pip install -U -e .[test]
deps =
   cython>0.29,<0.30
   tox~=3.25.0
   pip~=21.3.1
   -e .[test]

[testenv:deploy_env]
passenv = *
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
allowlist_externals =
    /bin/sh
commands =
    ansible-playbook -i localhost, --connection local k8s_env_deploy.yaml -vvvv
deps =
    ansible~=2.9.0
    openshift>=0.6
    pyyaml>=3.11
    docker
    tox

[testenv:destroy_env]
passenv = *
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
allowlist_externals =
    /bin/sh
commands =
    ansible-playbook -i localhost, --connection local k8s_env_destroy.yaml -vvvv
deps =
    ansible~=2.9.0
    openshift>=0.6
    pyyaml>=3.11
    docker
    tox

[testenv:release-docker]
passenv = *
setenv =
    LC_ALL = en_US.UTF-8
    LANG = en_US.UTF-8
allowlist_externals =
    /usr/bin/bash
    docker
    git
    ./autobuild.sh
commands = bash ./autobuild.sh
deps =
    docker-compose~=1.29.2
