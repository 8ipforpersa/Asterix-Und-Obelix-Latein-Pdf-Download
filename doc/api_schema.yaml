swagger: '2.0'
info:
  title: Polemarch
  description: |2+

    ### Polemarch is ansible based service for orchestration infrastructure.

    * [Documentation](http://polemarch.readthedocs.io/)
    * [Issue Tracker](https://gitlab.com/vstconsulting/polemarch/issues)
    * [Source Code](https://gitlab.com/vstconsulting/polemarch)

  termsOfService: ''
  contact:
    name: System Administrator
  x-docs:
    has_docs: true
    docs_url: /docs/
  x-links:
    Documentation:
      name: Official documentation
      url: http://polemarch.readthedocs.io/
    Repository:
      name: Official repository
      url: https://gitlab.com/vstconsulting/polemarch.git
    Request:
      - name: Question
        url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Ask&issue%5Btitle%5D=Ask%20about%20version%201.8.0
      - name: Bug report
        url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Bug&issue%5Btitle%5D=Bug%20in%20version%201.8.0
      - name: Feature request
        url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Feature%20request&issue%5Btitle%5D=
  x-menu:
    - name: Projects
      span_class: fas fa-cubes
      url: /project
    - name: Community
      span_class: fa fa-cloud
      url: /community_template
    - name: Inventories
      span_class: fa fa-folder
      sublinks:
        - name: Groups
          span_class: fas fa-server
          url: /group
        - name: Hosts
          span_class: fas fa-hdd
          url: /host
      url: /inventory
    - name: History
      span_class: fa fa-calendar
      url: /history
    - name: System
      span_class: fa fa-cog
      sublinks:
        - name: Users
          span_class: fa fa-user
          url: /user
        - name: Hooks
          span_class: fa fa-plug
          url: /hook
  x-settings:
    static_path: /static/
    enable_gravatar: true
    time_zone: UTC
  x-versions:
    application: 1.8.0
    library: 1.8.0
    vstutils: 3.3.0
    django: 2.2.12
    ansible: 2.9.9
  version: v2
  x-user-id: 1
host: localhost:8080
schemes:
  - http
basePath: /api/v2
consumes:
  - application/json
produces:
  - application/json
  - multipart/form-data; boundary=BoUnDaRyStRiNg
securityDefinitions:
  basic:
    type: basic
security:
  - basic: []
paths:
  /community_template/:
    get:
      operationId: community_template_list
      description: List of community project templates.
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectTemplate'
      tags:
        - community_template
    parameters: []
  /community_template/{id}/:
    get:
      operationId: community_template_get
      description: Return a community project template instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProjectTemplate'
      tags:
        - community_template
    parameters:
      - name: id
        in: path
        description: A unique value identifying this project template.
        required: true
        type: integer
  /community_template/{id}/use_it/:
    post:
      operationId: community_template_use_it
      description: Create project based on this template.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectTemplateCreate'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectTemplateCreate'
      tags:
        - community_template
    parameters:
      - name: id
        in: path
        description: A unique value identifying this project template.
        required: true
        type: integer
  /group/:
    get:
      operationId: group_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - group
    post:
      operationId: group_add
      description: Create a new group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      tags:
        - group
    parameters: []
  /group/{id}/:
    get:
      operationId: group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    put:
      operationId: group_update
      description: Update a group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    patch:
      operationId: group_edit
      description: Update one or more fields on an existing group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    delete:
      operationId: group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/copy/:
    post:
      operationId: group_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Group'
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/:
    get:
      operationId: group_group_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - group
    post:
      operationId: group_group_add
      description: Create a new group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/{group_id}/:
    get:
      operationId: group_group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    put:
      operationId: group_group_update
      description: Update a group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    patch:
      operationId: group_group_edit
      description: Update one or more fields on an existing group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - group
    delete:
      operationId: group_group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/{group_id}/copy/:
    post:
      operationId: group_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Group'
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/{group_id}/set_owner/:
    post:
      operationId: group_group_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/{group_id}/variables/:
    get:
      operationId: group_group_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    post:
      operationId: group_group_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: group_group_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    put:
      operationId: group_group_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    patch:
      operationId: group_group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    delete:
      operationId: group_group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /group/{id}/host/:
    get:
      operationId: group_host_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - group
    post:
      operationId: group_host_add
      description: Create a new host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/host/{host_id}/:
    get:
      operationId: group_host_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    put:
      operationId: group_host_update
      description: Update a host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    patch:
      operationId: group_host_edit
      description: Update one or more fields on an existing host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - group
    delete:
      operationId: group_host_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/host/{host_id}/copy/:
    post:
      operationId: group_host_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Host'
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/host/{host_id}/set_owner/:
    post:
      operationId: group_host_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/host/{host_id}/variables/:
    get:
      operationId: group_host_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    post:
      operationId: group_host_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: group_host_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    put:
      operationId: group_host_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    patch:
      operationId: group_host_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    delete:
      operationId: group_host_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /group/{id}/set_owner/:
    post:
      operationId: group_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/variables/:
    get:
      operationId: group_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    post:
      operationId: group_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
  /group/{id}/variables/{variables_id}/:
    get:
      operationId: group_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    put:
      operationId: group_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    patch:
      operationId: group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - group
    delete:
      operationId: group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - group
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this group.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /history/:
    get:
      operationId: history_list
      description: Return all history of executions.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: mode
          in: query
          description: Module or playbook name.
          required: false
          type: string
        - name: kind
          in: query
          description: Kind of execution.
          required: false
          type: string
        - name: status
          in: query
          description: Status of execution.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: older
          in: query
          description: Older then this time
          required: false
          type: string
        - name: newer
          in: query
          description: Newer then this time
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/History'
      tags:
        - history
    parameters: []
  /history/{id}/:
    get:
      operationId: history_get
      description: Return a execution history instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - history
    delete:
      operationId: history_remove
      description: Remove an existing history record.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - history
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{id}/cancel/:
    post:
      operationId: history_cancel
      description: Cencel working task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActionResponse'
      tags:
        - history
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{id}/clear/:
    delete:
      operationId: history_clear
      description: Clear history output.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - history
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /history/{id}/facts/:
    get:
      operationId: history_facts
      description: Get compilated history facts (only for execution 'module' with
        module 'setup').
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Data'
      tags:
        - history
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this history.
        required: true
        type: integer
  /hook/:
    get:
      operationId: hook_list
      description: Return all hooks.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Hook'
      tags:
        - hook
    post:
      operationId: hook_add
      description: Create a new hook.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    parameters: []
  /hook/{id}/:
    get:
      operationId: hook_get
      description: Return a hook instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    put:
      operationId: hook_update
      description: Update a hook.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    patch:
      operationId: hook_edit
      description: Update one or more fields on an existing hook.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Hook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
      tags:
        - hook
    delete:
      operationId: hook_remove
      description: Remove an existing hook.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - hook
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this hook.
        required: true
        type: integer
  /host/:
    get:
      operationId: host_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - host
    post:
      operationId: host_add
      description: Create a new host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    parameters: []
  /host/{id}/:
    get:
      operationId: host_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    put:
      operationId: host_update
      description: Update a host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    patch:
      operationId: host_edit
      description: Update one or more fields on an existing host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - host
    delete:
      operationId: host_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - host
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{id}/copy/:
    post:
      operationId: host_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Host'
      tags:
        - host
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{id}/set_owner/:
    post:
      operationId: host_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - host
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{id}/variables/:
    get:
      operationId: host_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - host
    post:
      operationId: host_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - host
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
  /host/{id}/variables/{variables_id}/:
    get:
      operationId: host_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - host
    put:
      operationId: host_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - host
    patch:
      operationId: host_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - host
    delete:
      operationId: host_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - host
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this host.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /inventory/:
    get:
      operationId: inventory_list
      description: Return all inventories.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
      tags:
        - inventory
    post:
      operationId: inventory_add
      description: Create a new inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    parameters: []
  /inventory/import_inventory/:
    post:
      operationId: inventory_import_inventory
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryImport'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryImport'
      tags:
        - inventory
    parameters: []
  /inventory/{id}/:
    get:
      operationId: inventory_get
      description: Return a inventory instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    put:
      operationId: inventory_update
      description: Update a inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    patch:
      operationId: inventory_edit
      description: Update one or more fields on an existing inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - inventory
    delete:
      operationId: inventory_remove
      description: Remove an existing inventory.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/all_groups/:
    get:
      operationId: inventory_all_groups_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/all_groups/{all_groups_id}/:
    get:
      operationId: inventory_all_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    parameters:
      - name: all_groups_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/all_hosts/:
    get:
      operationId: inventory_all_hosts_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/all_hosts/{all_hosts_id}/:
    get:
      operationId: inventory_all_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    parameters:
      - name: all_hosts_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/copy/:
    post:
      operationId: inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Inventory'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/:
    get:
      operationId: inventory_group_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - inventory
    post:
      operationId: inventory_group_add
      description: Create a new group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/{group_id}/:
    get:
      operationId: inventory_group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    put:
      operationId: inventory_group_update
      description: Update a group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    patch:
      operationId: inventory_group_edit
      description: Update one or more fields on an existing group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - inventory
    delete:
      operationId: inventory_group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/{group_id}/copy/:
    post:
      operationId: inventory_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Group'
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/{group_id}/set_owner/:
    post:
      operationId: inventory_group_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/{group_id}/variables/:
    get:
      operationId: inventory_group_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    post:
      operationId: inventory_group_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    put:
      operationId: inventory_group_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    patch:
      operationId: inventory_group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    delete:
      operationId: inventory_group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: group_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this groups sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /inventory/{id}/host/:
    get:
      operationId: inventory_host_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - inventory
    post:
      operationId: inventory_host_add
      description: Create a new host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/host/{host_id}/:
    get:
      operationId: inventory_host_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    put:
      operationId: inventory_host_update
      description: Update a host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    patch:
      operationId: inventory_host_edit
      description: Update one or more fields on an existing host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - inventory
    delete:
      operationId: inventory_host_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/host/{host_id}/copy/:
    post:
      operationId: inventory_host_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Host'
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/host/{host_id}/set_owner/:
    post:
      operationId: inventory_host_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/host/{host_id}/variables/:
    get:
      operationId: inventory_host_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    post:
      operationId: inventory_host_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: inventory_host_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    put:
      operationId: inventory_host_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    patch:
      operationId: inventory_host_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    delete:
      operationId: inventory_host_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: host_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this hosts sublist.
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /inventory/{id}/set_owner/:
    post:
      operationId: inventory_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/variables/:
    get:
      operationId: inventory_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    post:
      operationId: inventory_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
  /inventory/{id}/variables/{variables_id}/:
    get:
      operationId: inventory_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    put:
      operationId: inventory_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    patch:
      operationId: inventory_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - inventory
    delete:
      operationId: inventory_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - inventory
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this inventory.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /project/:
    get:
      operationId: project_list
      description: Return all projects.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: status
          in: query
          description: Project sync status.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: status__not
          in: query
          description: Project sync status.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Project'
      tags:
        - project
    post:
      operationId: project_add
      description: Create a new project.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectCreateMaster'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectCreateMaster'
      tags:
        - project
    parameters: []
  /project/{id}/:
    get:
      operationId: project_get
      description: Return a project instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    put:
      operationId: project_update
      description: Update a project.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    patch:
      operationId: project_edit
      description: Update one or more fields on an existing project.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
        - project
    delete:
      operationId: project_remove
      description: Remove an existing project.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/copy/:
    post:
      operationId: project_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Project'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/execute_module/:
    post:
      operationId: project_execute_module
      description: Execute `ansible -m [module]` with arguments.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AnsibleModule'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/execute_playbook/:
    post:
      operationId: project_execute_playbook
      description: Execute `ansible-playbook` with arguments.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AnsiblePlaybook'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/history/:
    get:
      operationId: project_history_list
      description: ''
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: mode
          in: query
          description: Module or playbook name.
          required: false
          type: string
        - name: kind
          in: query
          description: Kind of execution.
          required: false
          type: string
        - name: status
          in: query
          description: Status of execution.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: older
          in: query
          description: Older then this time
          required: false
          type: string
        - name: newer
          in: query
          description: Newer then this time
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectHistory'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/history/{history_id}/:
    get:
      operationId: project_history_get
      description: ''
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
        - project
    delete:
      operationId: project_history_remove
      description: ''
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this history sublist.
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/history/{history_id}/cancel/:
    post:
      operationId: project_history_cancel
      description: Cencel working task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActionResponse'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this history sublist.
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/history/{history_id}/clear/:
    delete:
      operationId: project_history_clear
      description: Clear history output.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this history sublist.
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/history/{history_id}/facts/:
    get:
      operationId: project_history_facts
      description: Get compilated history facts (only for execution 'module' with
        module 'setup').
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Data'
      tags:
        - project
    parameters:
      - name: history_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this history sublist.
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/inventory/:
    get:
      operationId: project_inventory_list
      description: Return all inventories.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
      tags:
        - project
    post:
      operationId: project_inventory_add
      description: Create a new inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/inventory/import_inventory/:
    post:
      operationId: project_inventory_import_inventory
      description: Create a new inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryImport'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryImport'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/inventory/{inventory_id}/:
    get:
      operationId: project_inventory_get
      description: Return a inventory instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    put:
      operationId: project_inventory_update
      description: Update a inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    patch:
      operationId: project_inventory_edit
      description: Update one or more fields on an existing inventory.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
        - project
    delete:
      operationId: project_inventory_remove
      description: Remove an existing inventory.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/all_groups/:
    get:
      operationId: project_inventory_all_groups_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/all_groups/{all_groups_id}/:
    get:
      operationId: project_inventory_all_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    parameters:
      - name: all_groups_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/all_hosts/:
    get:
      operationId: project_inventory_all_hosts_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/all_hosts/{all_hosts_id}/:
    get:
      operationId: project_inventory_all_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    parameters:
      - name: all_hosts_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/copy/:
    post:
      operationId: project_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Inventory'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/:
    get:
      operationId: project_inventory_group_list
      description: Return all groups.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
        - project
    post:
      operationId: project_inventory_group_add
      description: Create a new group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/GroupCreateMaster'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/:
    get:
      operationId: project_inventory_group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    put:
      operationId: project_inventory_group_update
      description: Update a group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    patch:
      operationId: project_inventory_group_edit
      description: Update one or more fields on an existing group.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
        - project
    delete:
      operationId: project_inventory_group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/copy/:
    post:
      operationId: project_inventory_group_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Group'
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/set_owner/:
    post:
      operationId: project_inventory_group_inventory_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/variables/:
    get:
      operationId: project_inventory_group_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    post:
      operationId: project_inventory_group_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    put:
      operationId: project_inventory_group_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    patch:
      operationId: project_inventory_group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    delete:
      operationId: project_inventory_group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: group_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /project/{id}/inventory/{inventory_id}/host/:
    get:
      operationId: project_inventory_host_list
      description: Return all hosts.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: variables
          in: query
          description: List of variables to filter. Comma separeted "key:value" list.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
        - project
    post:
      operationId: project_inventory_host_add
      description: Create a new host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/host/{host_id}/:
    get:
      operationId: project_inventory_host_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    put:
      operationId: project_inventory_host_update
      description: Update a host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    patch:
      operationId: project_inventory_host_edit
      description: Update one or more fields on an existing host.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
        - project
    delete:
      operationId: project_inventory_host_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/host/{host_id}/copy/:
    post:
      operationId: project_inventory_host_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Host'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/host/{host_id}/set_owner/:
    post:
      operationId: project_inventory_host_inventory_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/host/{host_id}/variables/:
    get:
      operationId: project_inventory_host_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    post:
      operationId: project_inventory_host_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/host/{host_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_host_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    put:
      operationId: project_inventory_host_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    patch:
      operationId: project_inventory_host_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    delete:
      operationId: project_inventory_host_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: host_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /project/{id}/inventory/{inventory_id}/set_owner/:
    post:
      operationId: project_inventory_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/variables/:
    get:
      operationId: project_inventory_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    post:
      operationId: project_inventory_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
  /project/{id}/inventory/{inventory_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    put:
      operationId: project_inventory_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    patch:
      operationId: project_inventory_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
        - project
    delete:
      operationId: project_inventory_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: inventory_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this inventories
          sublist.
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /project/{id}/module/:
    get:
      operationId: project_module_list
      description: Return all available modules of project.
      parameters:
        - name: path
          in: query
          description: Full path to module.
          required: false
          type: string
        - name: name
          in: query
          description: Name of module.
          required: false
          type: string
        - name: path__not
          in: query
          description: Full path to module.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Module'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/module/{module_id}/:
    get:
      operationId: project_module_get
      description: Return a module details of project instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneModule'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: module_id
        in: path
        required: true
        type: string
  /project/{id}/periodic_task/:
    get:
      operationId: project_periodic_task_list
      description: Return all periodic tasks in project.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: mode
          in: query
          description: Periodic task module or playbook name.
          required: false
          type: string
        - name: kind
          in: query
          description: Kind of periodic task.
          required: false
          type: string
        - name: type
          in: query
          description: Instance type.
          required: false
          type: string
        - name: template
          in: query
          description: A unique integer id of template used in periodic task.
          required: false
          type: number
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Periodictask'
      tags:
        - project
    post:
      operationId: project_periodic_task_add
      description: Create a new periodic task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OnePeriodictask'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/periodic_task/{periodic_task_id}/:
    get:
      operationId: project_periodic_task_get
      description: Return a perodic task instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    put:
      operationId: project_periodic_task_update
      description: Update a periodic task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OnePeriodictask'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    patch:
      operationId: project_periodic_task_edit
      description: Update one or more fields on an existing periodic task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OnePeriodictask'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OnePeriodictask'
      tags:
        - project
    delete:
      operationId: project_periodic_task_remove
      description: Remove an existing periodic task.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: periodic_task_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this periodic_task
          sublist.
  /project/{id}/periodic_task/{periodic_task_id}/execute/:
    post:
      operationId: project_periodic_task_execute
      description: Ad-hoc execute periodic task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: periodic_task_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this periodic_task
          sublist.
  /project/{id}/periodic_task/{periodic_task_id}/variables/:
    get:
      operationId: project_periodic_task_variables_list
      description: Return all variables of periodic task.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/PeriodicTaskVariable'
      tags:
        - project
    post:
      operationId: project_periodic_task_variables_add
      description: Create a new variable of periodic task.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: periodic_task_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this periodic_task
          sublist.
  /project/{id}/periodic_task/{periodic_task_id}/variables/{variables_id}/:
    get:
      operationId: project_periodic_task_variables_get
      description: Return a variable of periodic task.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      tags:
        - project
    put:
      operationId: project_periodic_task_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      tags:
        - project
    patch:
      operationId: project_periodic_task_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PeriodicTaskVariable'
      tags:
        - project
    delete:
      operationId: project_periodic_task_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: periodic_task_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this periodic_task
          sublist.
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /project/{id}/playbook/:
    get:
      operationId: project_playbook_list
      description: Return all playbooks of project.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: playbook
          in: query
          description: Playbook filename.
          required: false
          type: string
        - name: pb_filter
          in: query
          description: Playbook filename - filter for prefetch.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: playbook__not
          in: query
          description: Playbook filename.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Playbook'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/playbook/{playbook_id}/:
    get:
      operationId: project_playbook_get
      description: Return a playbook of project instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OnePlaybook'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: playbook_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this playbook
          sublist.
  /project/{id}/set_owner/:
    post:
      operationId: project_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/sync/:
    post:
      operationId: project_sync
      description: Sync project with repository.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActionResponse'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/template/:
    get:
      operationId: project_template_list
      description: Return all execute templates in project.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: kind
          in: query
          description: A kind of template.
          required: false
          type: string
        - name: inventory
          in: query
          description: The inventory id or path in project.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Template'
      tags:
        - project
    post:
      operationId: project_template_add
      description: Create a new execute template.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTemplate'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/template/{template_id}/:
    get:
      operationId: project_template_get
      description: Return a execute template instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    put:
      operationId: project_template_update
      description: Update a execute template.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    patch:
      operationId: project_template_edit
      description: Update one or more fields on an existing execute template.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplate'
      tags:
        - project
    delete:
      operationId: project_template_remove
      description: Remove an existing execute template.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: template_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this template
          sublist.
  /project/{id}/template/{template_id}/execute/:
    post:
      operationId: project_template_execute
      description: Execute template with option.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TemplateExec'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteResponse'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: template_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this template
          sublist.
  /project/{id}/variables/:
    get:
      operationId: project_variables_list
      description: Return all variables of instance.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: key
          in: query
          description: A key name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: value
          in: query
          description: A value of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    post:
      operationId: project_variables_add
      description: Create a new variable of instance.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /project/{id}/variables/{variables_id}/:
    get:
      operationId: project_variables_get
      description: Return a variable of instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    put:
      operationId: project_variables_update
      description: Update variable value.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    patch:
      operationId: project_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
        - project
    delete:
      operationId: project_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - project
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
      - name: variables_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this variables
          sublist.
  /team/:
    get:
      operationId: team_list
      description: Return all teams.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: name__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Team'
      tags:
        - team
    post:
      operationId: team_add
      description: Create a new team.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    parameters: []
  /team/{id}/:
    get:
      operationId: team_get
      description: Return a team instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    put:
      operationId: team_update
      description: Update a team.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    patch:
      operationId: team_edit
      description: Update one or more fields on an existing team.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneTeam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTeam'
      tags:
        - team
    delete:
      operationId: team_remove
      description: Remove an existing team.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
  /team/{id}/copy/:
    post:
      operationId: team_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Team'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Team'
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
  /team/{id}/set_owner/:
    post:
      operationId: team_set_owner
      description: Change instance owner.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetOwner'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
  /team/{id}/user/:
    get:
      operationId: team_user_list
      description: Return all users.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: username
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: is_active
          in: query
          description: Boolean value meaning status of user.
          required: false
          type: string
        - name: first_name
          in: query
          description: Users first name.
          required: false
          type: string
        - name: last_name
          in: query
          description: Users last name.
          required: false
          type: string
        - name: email
          in: query
          description: Users e-mail value.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: username__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - team
    post:
      operationId: team_user_add
      description: Create a new user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateUser'
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
  /team/{id}/user/{user_id}/:
    get:
      operationId: team_user_get
      description: Return a user instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - team
    put:
      operationId: team_user_update
      description: Update a user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - team
    patch:
      operationId: team_user_edit
      description: Update one or more fields on an existing user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - team
    delete:
      operationId: team_user_remove
      description: Remove an existing user.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
      - name: user_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this users sublist.
  /team/{id}/user/{user_id}/change_password/:
    post:
      operationId: team_user_change_password
      description: Create a new user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangePassword'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ChangePassword'
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
      - name: user_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this users sublist.
  /team/{id}/user/{user_id}/copy/:
    post:
      operationId: team_user_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/User'
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
      - name: user_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this users sublist.
  /team/{id}/user/{user_id}/settings/:
    get:
      operationId: team_user_settings_get
      summary: |-
        A settings object, that allows API settings to be accessed as properties.
            For example:
      description: |-
        from rest_framework.settings import api_settings
                print(api_settings.DEFAULT_RENDERER_CLASSES)

            Any setting with string import paths will be automatically resolved
            and return the class, rather than the string literal.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSettings'
      tags:
        - team
    post:
      operationId: team_user_settings_add
      summary: |-
        A settings object, that allows API settings to be accessed as properties.
            For example:
      description: |-
        from rest_framework.settings import api_settings
                print(api_settings.DEFAULT_RENDERER_CLASSES)

            Any setting with string import paths will be automatically resolved
            and return the class, rather than the string literal.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserSettings'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/UserSettings'
      tags:
        - team
    delete:
      operationId: team_user_settings_remove
      summary: |-
        A settings object, that allows API settings to be accessed as properties.
            For example:
      description: |-
        from rest_framework.settings import api_settings
                print(api_settings.DEFAULT_RENDERER_CLASSES)

            Any setting with string import paths will be automatically resolved
            and return the class, rather than the string literal.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - team
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user group.
        required: true
        type: integer
      - name: user_id
        in: path
        required: true
        type: integer
        description: A unique integer value identifying instance of this users sublist.
  /user/:
    get:
      operationId: user_list
      description: Return all users.
      parameters:
        - name: id
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: username
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: is_active
          in: query
          description: Boolean value meaning status of user.
          required: false
          type: string
        - name: first_name
          in: query
          description: Users first name.
          required: false
          type: string
        - name: last_name
          in: query
          description: Users last name.
          required: false
          type: string
        - name: email
          in: query
          description: Users e-mail value.
          required: false
          type: string
        - name: id__not
          in: query
          description: A unique integer value (or comma separated list) identifying
            this instance.
          required: false
          type: string
        - name: username__not
          in: query
          description: A name string value (or comma separated list) of instance.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - user
    post:
      operationId: user_add
      description: Create a new user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateUser'
      tags:
        - user
    parameters: []
  /user/{id}/:
    get:
      operationId: user_get
      description: Return a user instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - user
    put:
      operationId: user_update
      description: Update a user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - user
    patch:
      operationId: user_edit
      description: Update one or more fields on an existing user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
        - user
    delete:
      operationId: user_remove
      description: Remove an existing user.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /user/{id}/change_password/:
    post:
      operationId: user_change_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangePassword'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ChangePassword'
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /user/{id}/copy/:
    post:
      operationId: user_copy
      description: Endpoint which copy instance with deps.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /user/{id}/settings/:
    get:
      operationId: user_settings_get
      description: Return user settings.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserSettings'
      tags:
        - user
    post:
      operationId: user_settings_add
      description: Return user settings.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserSettings'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/UserSettings'
      tags:
        - user
    delete:
      operationId: user_settings_remove
      description: Return user settings.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  ProjectTemplate:
    required:
      - id
      - name
    type: object
    properties:
      id:
        title: Id
        type: integer
      name:
        title: Name
        type: string
        maxLength: 1024
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - GIT
          - TAR
  OneProjectTemplate:
    required:
      - id
      - name
      - description
      - repository
    type: object
    properties:
      id:
        title: Id
        type: integer
      name:
        title: Name
        type: string
        maxLength: 1024
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - GIT
          - TAR
      repository:
        title: Repository
        type: string
        maxLength: 2048
        minLength: 1
  ProjectTemplateCreate:
    type: object
    properties:
      project_id:
        title: Project id
        type: integer
        readOnly: true
        additionalProperties:
          redirect: true
        x-nullable: true
      name:
        title: Name
        type: string
        minLength: 1
  Group:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      children:
        title: Children
        type: boolean
        readOnly: true
  User:
    title: Owner
    required:
      - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  GroupCreateMaster:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      children:
        title: Contains groups
        type: boolean
        default: false
      owner:
        $ref: '#/definitions/User'
  OneGroup:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      children:
        title: Children
        type: boolean
        readOnly: true
      owner:
        $ref: '#/definitions/User'
  SetOwner:
    required:
      - user_id
    type: object
    properties:
      user_id:
        title: New owner
        type: integer
        format: fk
        additionalProperties:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
  InventoryVariable:
    required:
      - key
      - value
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        format: autocomplete
        enum:
          - ansible_host
          - ansible_port
          - ansible_user
          - ansible_connection
          - ansible_ssh_pass
          - ansible_ssh_private_key_file
          - ansible_ssh_common_args
          - ansible_sftp_extra_args
          - ansible_scp_extra_args
          - ansible_ssh_extra_args
          - ansible_ssh_executable
          - ansible_ssh_pipelining
          - ansible_become
          - ansible_become_method
          - ansible_become_user
          - ansible_become_pass
          - ansible_become_exe
          - ansible_become_flags
          - ansible_shell_type
          - ansible_python_interpreter
          - ansible_ruby_interpreter
          - ansible_perl_interpreter
          - ansible_shell_executable
      value:
        title: Value
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: key
          types:
            ansible_become: boolean
            ansible_become_pass: password
            ansible_port: integer
            ansible_ssh_pass: password
            ansible_ssh_private_key_file: secretfile
  Host:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - HOST
          - RANGE
        default: HOST
  OneHost:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      type:
        title: Type
        type: string
        enum:
          - HOST
          - RANGE
        default: HOST
      owner:
        $ref: '#/definitions/User'
  History:
    required:
      - mode
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      start_time:
        title: Start time
        type: string
        format: date-time
      executor:
        title: Executor
        type: integer
        x-nullable: true
      initiator:
        title: Initiator
        type: integer
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      project:
        title: Project
        type: integer
        x-nullable: true
      inventory:
        title: Inventory
        type: integer
        x-nullable: true
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      options:
        title: Options
        type: string
        readOnly: true
      status:
        title: Status
        type: string
        enum:
          - DELAY
          - RUN
          - OK
          - ERROR
          - OFFLINE
          - INTERRUPTED
      stop_time:
        title: Stop time
        type: string
        format: date-time
        x-nullable: true
  OneHistory:
    required:
      - mode
      - execution_time
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      status:
        title: Status
        type: string
        enum:
          - DELAY
          - RUN
          - OK
          - ERROR
          - OFFLINE
          - INTERRUPTED
      executor:
        title: Executor
        type: integer
        x-nullable: true
      project:
        title: Project
        type: integer
        x-nullable: true
      revision:
        title: Revision
        type: string
        maxLength: 256
        x-nullable: true
      inventory:
        title: Inventory
        type: integer
        x-nullable: true
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      execute_args:
        title: Execute args
        type: string
        readOnly: true
      execution_time:
        title: Execution time
        type: integer
        format: uptime
      start_time:
        title: Start time
        type: string
        format: date-time
      stop_time:
        title: Stop time
        type: string
        format: date-time
        x-nullable: true
      initiator:
        title: Initiator
        type: integer
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      options:
        title: Options
        type: string
        readOnly: true
      raw_args:
        title: Raw args
        type: string
        minLength: 1
      raw_stdout:
        title: Raw stdout
        type: string
        readOnly: true
      raw_inventory:
        title: Raw inventory
        type: string
        minLength: 1
  Empty:
    type: object
    properties: {}
  ActionResponse:
    required:
      - detail
    type: object
    properties:
      detail:
        title: Detail
        type: string
        minLength: 1
  Data:
    type: object
    properties: {}
  Hook:
    required:
      - type
      - recipients
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        enum:
          - HTTP
          - SCRIPT
      when:
        title: When
        type: string
        enum:
          - on_execution
          - after_execution
          - on_user_add
          - on_user_upd
          - on_user_del
          - on_object_add
          - on_object_upd
          - on_object_del
      enable:
        title: Enable
        type: boolean
      recipients:
        title: Recipients
        type: string
        minLength: 1
  Inventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
  OneInventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      owner:
        $ref: '#/definitions/User'
  InventoryImport:
    required:
      - name
      - raw_data
    type: object
    properties:
      inventory_id:
        title: Inventory id
        type: integer
        additionalProperties:
          redirect: true
        x-nullable: true
      name:
        title: Name
        type: string
        minLength: 1
      raw_data:
        title: Raw data
        type: string
        minLength: 1
  Project:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        readOnly: true
        minLength: 1
      status:
        title: Status
        type: string
        enum:
          - NEW
          - ERROR
          - OK
          - WAIT_SYNC
          - SYNC
        readOnly: true
  ProjectCreateMaster:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      status:
        title: Status
        type: string
        readOnly: true
        minLength: 1
      type:
        title: Repo type
        type: string
        enum:
          - MANUAL
          - GIT
          - TAR
        default: MANUAL
      repository:
        title: Repo url
        type: string
        default: MANUAL
        minLength: 1
      repo_auth:
        title: Repo auth type
        type: string
        format: dynamic
        default: NONE
        additionalProperties:
          choices:
            GIT:
              - NONE
              - KEY
              - PASSWORD
          field: type
          types:
            GIT: string
            MANUAL: hidden
            TAR: hidden
      auth_data:
        title: Repo auth data
        type: string
        format: dynamic
        default: ''
        additionalProperties:
          choices: {}
          field: repo_auth
          types:
            KEY: secretfile
            NONE: hidden
            PASSWORD: password
      branch:
        title: Branch for GIT(branch/tag/SHA) or TAR(subdir)
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: type
          types:
            GIT: string
            MANUAL: hidden
            TAR: string
        x-nullable: true
      additional_playbook_path:
        title: Directory with playbooks
        type: string
        minLength: 1
        x-nullable: true
  OneProject:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      repository:
        title: Repository
        type: string
        default: MANUAL
        minLength: 1
      status:
        title: Status
        type: string
        enum:
          - NEW
          - ERROR
          - OK
          - WAIT_SYNC
          - SYNC
        readOnly: true
      revision:
        title: Revision
        type: string
        readOnly: true
      branch:
        title: Branch
        type: string
        readOnly: true
      owner:
        $ref: '#/definitions/User'
      notes:
        title: Notes
        type: string
        format: textarea
      readme_content:
        title: Information
        type: string
        format: html
        readOnly: true
      execute_view_data:
        $ref: '#/definitions/Data'
  AnsibleModule:
    required:
      - module
    type: object
    properties:
      module:
        title: Module
        type: string
        format: autocomplete
        additionalProperties:
          model:
            $ref: '#/definitions/Module'
          value_field: name
          view_field: path
      args:
        title: Args
        description: host pattern
        type: string
      background:
        title: Background
        description: run asynchronously, failing after X seconds (default=N/A)
        type: integer
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
        default: false
      become_method:
        title: Become method
        description: privilege escalation method to use (default=sudo), use `ansible-doc
          -t become -l` to list valid choices.
        type: string
      become_user:
        title: Become user
        description: run operations as this user (default=root)
        type: string
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
        default: false
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
        default: false
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      inventory:
        title: Inventory
        description: specify inventory host path or comma separated host list. --inventory-file
          is deprecated
        type: string
        format: autocomplete
        additionalProperties:
          model:
            $ref: '#/definitions/Inventory'
          value_field: id
          view_field: name
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
        default: false
      module_path:
        title: Module path
        description: prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)
        type: string
      one_line:
        title: One line
        description: condense output
        type: boolean
        default: false
      playbook_dir:
        title: Playbook dir
        description: Since this tool does not use playbooks, use this as a substitute
          playbook directory.This sets the relative path for many features including
          roles/ group_vars/ etc.
        type: string
      poll:
        title: Poll
        description: set the poll interval if using -B (default=15)
        type: integer
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        format: secretfile
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
        default: false
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      tree:
        title: Tree
        description: log output to this directory
        type: string
      user:
        title: User
        description: connect as this user (default=None)
        type: string
      vault_id:
        title: Vault id
        description: the vault identity to use
        type: string
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        format: secretfile
      verbose:
        title: Verbose
        description: verbose mode (-vvv for more, -vvvv to enable connection debugging)
        type: integer
        default: 0
        maximum: 4
      group:
        title: Group
        type: string
        default: all
  ExecuteResponse:
    required:
      - detail
    type: object
    properties:
      detail:
        title: Detail
        type: string
        minLength: 1
      history_id:
        title: History id
        type: integer
        additionalProperties:
          redirect: true
        x-nullable: true
      executor:
        title: Executor
        type: integer
        x-nullable: true
  AnsiblePlaybook:
    required:
      - playbook
    type: object
    properties:
      playbook:
        title: Playbook
        type: string
        format: autocomplete
        additionalProperties:
          model:
            $ref: '#/definitions/Playbook'
          value_field: playbook
          view_field: name
      args:
        title: Args
        description: Playbook(s)
        type: string
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
        default: false
      become_method:
        title: Become method
        description: privilege escalation method to use (default=sudo), use `ansible-doc
          -t become -l` to list valid choices.
        type: string
      become_user:
        title: Become user
        description: run operations as this user (default=root)
        type: string
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
        default: false
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
        default: false
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
      flush_cache:
        title: Flush cache
        description: clear the fact cache for every host in inventory
        type: boolean
        default: false
      force_handlers:
        title: Force handlers
        description: run handlers even if a task fails
        type: boolean
        default: false
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      inventory:
        title: Inventory
        description: specify inventory host path or comma separated host list. --inventory-file
          is deprecated
        type: string
        format: autocomplete
        additionalProperties:
          model:
            $ref: '#/definitions/Inventory'
          value_field: id
          view_field: name
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
        default: false
      list_tags:
        title: List tags
        description: list all available tags
        type: boolean
        default: false
      list_tasks:
        title: List tasks
        description: list all tasks that would be executed
        type: boolean
        default: false
      module_path:
        title: Module path
        description: prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)
        type: string
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        format: secretfile
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
      skip_tags:
        title: Skip tags
        description: only run plays and tasks whose tags do not match these values
        type: string
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
      start_at_task:
        title: Start at task
        description: start the playbook at the task matching this name
        type: string
      step:
        title: Step
        description: 'one-step-at-a-time: confirm each task before running'
        type: boolean
        default: false
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
        default: false
      tags:
        title: Tags
        description: only run plays and tasks tagged with these values
        type: string
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      user:
        title: User
        description: connect as this user (default=None)
        type: string
      vault_id:
        title: Vault id
        description: the vault identity to use
        type: string
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        format: secretfile
      verbose:
        title: Verbose
        description: verbose mode (-vvv for more, -vvvv to enable connection debugging)
        type: integer
        default: 0
        maximum: 4
  ProjectHistory:
    required:
      - mode
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      start_time:
        title: Start time
        type: string
        format: date-time
      executor:
        title: Executor
        type: integer
        x-nullable: true
      initiator:
        title: Initiator
        type: integer
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      revision:
        title: Revision
        type: string
        maxLength: 256
        x-nullable: true
      inventory:
        title: Inventory
        type: integer
        x-nullable: true
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      options:
        title: Options
        type: string
        readOnly: true
      status:
        title: Status
        type: string
        enum:
          - DELAY
          - RUN
          - OK
          - ERROR
          - OFFLINE
          - INTERRUPTED
      stop_time:
        title: Stop time
        type: string
        format: date-time
        x-nullable: true
  Module:
    required:
      - path
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
      name:
        title: Name
        type: string
        readOnly: true
  OneModule:
    required:
      - path
      - data
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
      name:
        title: Name
        type: string
        readOnly: true
      data:
        $ref: '#/definitions/Data'
  Periodictask:
    required:
      - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      kind:
        title: Task type
        type: string
        enum:
          - PLAYBOOK
          - MODULE
          - TEMPLATE
        default: PLAYBOOK
      mode:
        title: Mode
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: fk_autocomplete
            PLAYBOOK: fk_autocomplete
            TEMPLATE: hidden
      inventory:
        title: Inventory
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: fk_autocomplete
            PLAYBOOK: fk_autocomplete
            TEMPLATE: hidden
      save_result:
        title: Save result
        type: boolean
      template:
        title: Template
        type: integer
        x-nullable: true
      template_opt:
        title: Template opt
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: hidden
            PLAYBOOK: hidden
            TEMPLATE: autocomplete
      enabled:
        title: Enabled
        type: boolean
      type:
        title: Interval type
        type: string
        enum:
          - CRONTAB
          - INTERVAL
        default: CRONTAB
      schedule:
        title: Schedule
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: type
          types:
            CRONTAB: crontab
            INTERVAL: integer
  OnePeriodictask:
    required:
      - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      kind:
        title: Task type
        type: string
        enum:
          - PLAYBOOK
          - MODULE
          - TEMPLATE
        default: PLAYBOOK
      mode:
        title: Mode
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: fk_autocomplete
            PLAYBOOK: fk_autocomplete
            TEMPLATE: hidden
      inventory:
        title: Inventory
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: fk_autocomplete
            PLAYBOOK: fk_autocomplete
            TEMPLATE: hidden
      save_result:
        title: Save result
        type: boolean
      template:
        title: Template
        type: integer
        x-nullable: true
      template_opt:
        title: Template opt
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: kind
          types:
            MODULE: hidden
            PLAYBOOK: hidden
            TEMPLATE: autocomplete
      enabled:
        title: Enabled
        type: boolean
      type:
        title: Interval type
        type: string
        enum:
          - CRONTAB
          - INTERVAL
        default: CRONTAB
      schedule:
        title: Schedule
        type: string
        format: dynamic
        additionalProperties:
          choices: {}
          field: type
          types:
            CRONTAB: crontab
            INTERVAL: integer
      notes:
        title: Notes
        type: string
        format: textarea
  PeriodicTaskVariable:
    required:
      - key
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        maxLength: 512
        minLength: 1
      value:
        title: Value
        type: string
        default: ''
  Playbook:
    required:
      - playbook
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 251
        minLength: 1
      playbook:
        title: Playbook
        type: string
        maxLength: 256
        minLength: 1
  OnePlaybook:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 251
        minLength: 1
      playbook:
        title: Playbook
        type: string
        readOnly: true
        minLength: 1
  Template:
    required:
      - name
      - data
      - options
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      kind:
        title: Type
        type: string
        enum:
          - Task
          - Module
        default: Task
      data:
        $ref: '#/definitions/Data'
      options:
        $ref: '#/definitions/Data'
      options_list:
        type: array
        items:
          type: string
        readOnly: true
  OneTemplate:
    required:
      - name
      - data
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      kind:
        title: Type
        type: string
        enum:
          - Task
          - Module
        default: Task
      data:
        $ref: '#/definitions/Data'
      options:
        $ref: '#/definitions/Data'
      options_list:
        type: array
        items:
          type: string
        readOnly: true
  TemplateExec:
    type: object
    properties:
      option:
        title: Option
        description: Option name from template options.
        type: string
        minLength: 0
  ProjectVariable:
    required:
      - key
      - value
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        format: autocomplete
        enum:
          - repo_type
          - repo_sync_on_run
          - repo_sync_on_run_timeout
          - repo_branch
          - repo_password
          - repo_key
          - playbook_path
          - ci_template
      value:
        title: Value
        type: string
        format: dynamic
        additionalProperties:
          choices:
            repo_sync_on_run:
              - true
              - false
            repo_type:
              - MANUAL
              - GIT
              - TAR
          field: key
          types:
            ci_template: fk
            repo_key: secretfile
            repo_password: password
            repo_sync_on_run_timeout: uptime
  Team:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 150
        minLength: 1
  OneTeam:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 150
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      owner:
        $ref: '#/definitions/User'
  CreateUser:
    required:
      - username
      - password
      - password2
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      is_staff:
        title: Is staff
        type: boolean
        default: false
      first_name:
        title: First name
        type: string
        maxLength: 30
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      password2:
        title: Repeat password
        type: string
        minLength: 1
  OneUser:
    required:
      - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      first_name:
        title: First name
        type: string
        maxLength: 30
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  ChangePassword:
    required:
      - old_password
      - password
      - password2
    type: object
    properties:
      old_password:
        title: Old password
        type: string
        minLength: 1
      password:
        title: New password
        type: string
        minLength: 1
      password2:
        title: Confirm new password
        type: string
        minLength: 1
  ChartLineSetting:
    title: All tasks
    type: object
    properties:
      active:
        title: Active
        type: boolean
        default: true
  ChartLineSettings:
    title: Chartlinesettings
    required:
      - all_tasks
      - delay
      - ok
      - error
      - interrupted
      - offline
    type: object
    properties:
      all_tasks:
        $ref: '#/definitions/ChartLineSetting'
      delay:
        $ref: '#/definitions/ChartLineSetting'
      ok:
        $ref: '#/definitions/ChartLineSetting'
      error:
        $ref: '#/definitions/ChartLineSetting'
      interrupted:
        $ref: '#/definitions/ChartLineSetting'
      offline:
        $ref: '#/definitions/ChartLineSetting'
  CounterWidgetSetting:
    title: Pmwuserscounter
    type: object
    properties:
      active:
        title: Active
        type: boolean
        default: true
      collapse:
        title: Collapse
        type: boolean
        readOnly: true
        default: false
      sort:
        title: Sort
        type: integer
        default: 0
  WidgetSetting:
    title: Pmwchartwidget
    type: object
    properties:
      active:
        title: Active
        type: boolean
        default: true
      collapse:
        title: Collapse
        type: boolean
        default: false
      sort:
        title: Sort
        type: integer
        default: 0
  WidgetSettings:
    title: Widgetsettings
    required:
      - pmwUsersCounter
      - pmwProjectsCounter
      - pmwTemplatesCounter
      - pmwInventoriesCounter
      - pmwGroupsCounter
      - pmwHostsCounter
      - pmwChartWidget
    type: object
    properties:
      pmwUsersCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwProjectsCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwTemplatesCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwInventoriesCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwGroupsCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwHostsCounter:
        $ref: '#/definitions/CounterWidgetSetting'
      pmwChartWidget:
        $ref: '#/definitions/WidgetSetting'
  UserSettings:
    required:
      - chartLineSettings
      - widgetSettings
    type: object
    properties:
      lang:
        title: Lang
        type: string
        enum:
          - en
          - ru
        default: en
      autoupdateInterval:
        title: Autoupdateinterval
        type: integer
        default: 15000
      chartLineSettings:
        $ref: '#/definitions/ChartLineSettings'
      widgetSettings:
        $ref: '#/definitions/WidgetSettings'
      selectedSkin:
        title: Selectedskin
        type: string
        minLength: 1
      skinsSettings:
        $ref: '#/definitions/Data'
