[tox]
envlist = py3{6,7,8}-{coverage,install},flake,pylint
skipsdist = True
setenv = PIP_CONFIG_FILE=.pip.conf
whitelist_externals =
    rm
    bash

[testenv]
setenv =
    CCACHE_DIR = {envdir}/.ccache
    COMPILE_WITH_TESTS = true
passenv =
    DJANGO_LOG_LEVEL
    CC
    BUILD_COMPILE
whitelist_externals =
    rm
    ls
    ln
    bash
    mkdir
commands =
  -pip install -U pip
  install: rm -rfv {envdir}/dist/
  install: python setup.py bdist_wheel --dist-dir {envdir}/dist/
  install: bash -c "export BUILD_COMPILE=true; pip install -U {envdir}/dist/$(ls {envdir}/dist)[all]"
  coverage: python setup.py install_egg_info
  coverage: pip install -U -e .
  install: rm -f {envdir}/tests.py {envdir}/tests.pyc
  install: bash -c "cd {envdir} && ln -s {toxinidir}/tests.py && python -m polemarch test -v 2 --failfast --parallel 8"
  coverage: coverage debug sys
  coverage: coverage erase
  coverage: coverage run -m polemarch test -v 2 --failfast --parallel 8 {posargs}
  coverage: coverage combine
  coverage: coverage report
  rm -rf .eggs build polemarch.egg-info {envdir}/dist
  install: pip uninstall polemarch -y
deps =
    -rrequirements.txt
    -rrequirements-git.txt
    -rrequirements-test.txt

[testenv:flake]
basepython = python3.8
deps =
    flake8
    -rrequirements.txt
    -rrequirements-git.txt
commands =
  flake8 --config=.pep8 polemarch

[testenv:pylint]
basepython = python3.8
deps =
    pylint==2.3.0
    pylint-django==2.0.6
    pylint-plugin-utils==0.5
    -rrequirements.txt
    -rrequirements-git.txt
commands =
  pip uninstall polemarch -y
  python setup.py install_egg_info
  pip install -U -e .
  pylint --rcfile=./.pylintrc {posargs} polemarch

[testenv:build]
basepython = python3.6
passenv = *
changedir = .
whitelist_externals =
    tox
    rm
commands =
    rm -rf dist build
    tox -c tox_build.ini -e py36-build,py37-wheel --workdir {toxworkdir}

[testenv:builddoc]
basepython = python3.6
changedir = ./doc/
whitelist_externals =
    cp
    make
commands =
    pip install -U -r ../requirements-doc.txt
    make html
    # cp -rv _build/html ../public
deps =
  -rrequirements-doc.txt

[testenv:release]
basepython = python3.6
toxworkdir = ./
passenv = *
whitelist_externals =
    mkdir
    ls
commands =
    mkdir -p dist
    ls -la dist
    python setup.py githubrelease
deps =
    githubrelease

[testenv:contrib]
basepython = python3.6
skipsdist = False
usedevelop = True
envdir = {toxinidir}/env
setenv = CCACHE_DIR = {envdir}/.ccache
passenv = *
whitelist_externals = *
commands =
    python setup.py install_egg_info
    pip install -U -e .[test]
deps =
   cython>0.29,<0.30
   tox==3.8.4
   -e .[test]

[testenv:deploy_env]
passenv = *
whitelist_externals =
    /bin/sh
commands =
    ansible-playbook -i localhost, --connection local k8s_env_deploy.yaml -vvvv
deps =
    ansible~=2.9.0
    openshift>=0.6
    pyyaml>=3.11
    docker
    tox

[testenv:destroy_env]
passenv = *
whitelist_externals =
    /bin/sh
commands =
    ansible-playbook -i localhost, --connection local k8s_env_destroy.yaml -vvvv
deps =
    ansible~=2.9.0
    openshift>=0.6
    pyyaml>=3.11
    docker
    tox

[testenv:release-docker]
passenv = *
commands = ansible-playbook docker_release.yml -v -i ./environment/docker_build_image_inventory.ini --connection local
deps =
    ansible==2.5
    docker==3.4.0
