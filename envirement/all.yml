---
##### VARS FOR REGISTRY / DOCKER / DOCKERHUB
k8s_path_deployment_template: "{{ lookup('env', 'PATH_DEPLOYMENT_TEMPLATE') or './envirement/deployment_pm.yml.j2' }}"
k8s_registry_image_name: "{{ lookup('env', 'REGISTRY_IMAGE') }}"
k8s_registry_image_tag: "{{ lookup('env', 'REGISTRY_IMAGE_TAG') }}"
k8s_registry_user: "{{ lookup('env', 'REGISTRY_USER') }}"
k8s_registry_password: "{{ lookup('env', 'REGISTRY_PASSWORD') }}"
k8s_registry_url: "{{ lookup('env', 'REGISTRY_URL') or 'https://index.docker.io/v1/' }}"
k8s_docker_host: "{{ lookup ('env', 'DOCKER_HOST') or 'unix://var/run/docker.sock' }}"
k8s_status_project: "{{ lookup ('env', 'K8S_STATUS_PROJECT') }}"

##### VARS FOR KUBE
k8s_kubeconfig: "{{ lookup('env', 'KUBECONFIG') or '~/.kube/config' }}"
k8s_env_namespace: "{{ lookup('env', 'KUBE_NAMESPACE') }}"
k8s_kube_pm_ingress_domain: "{{ lookup('env', 'K8S_INGRESS_DOMAIN') }}"
k8s_pm_playbook_template: "{{ lookup('template', k8s_path_deployment_template) }}"

###### if kubernetes in rancher -> "true"
k8s_kube_in_rancher: "{{ lookup('env', 'K8S_KUBE_IN_RANCHER') or 'true' }}"

########## block SECRET for local registry --->>>
k8s_registry_dockerconfig_auth: "{{ k8s_registry_user }}:{{ k8s_registry_password }}"
k8s_registry_dockerconfig_base64: '{"auths":{"{{ k8s_registry_url }}":{"username":"{{ k8s_registry_user }}","password":"{{ k8s_registry_password }}","auth":"{{ k8s_registry_dockerconfig_auth | b64encode }}"}}}'

########## ENV K8S POLEMARCH --->>>
kube_pm_replilica_vol: 1
kube_pm_log_level: "{{ lookup('env', 'K8S_PM_LOG_LEVEL') or 'WARNING' }}"
kube_pm_debug: "{{ lookup('env', 'K8S_PM_DEBUG') or 'false' }}"
kube_pm_timezone: "{{ lookup('env', 'K8S_PM_TIMEZONE') or 'UTC' }}"
kube_pm_label: "{{ lookup('env', 'CI_COMMIT_SHORT_SHA') }}"

########## TLS CRT AND KEY POLEMARCH --->>>
k8s_tls_crt: "{{ lookup('env', 'K8S_TLS_CRT') or 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZuVENDQTRXZ0F3SUJBZ0lJSXpNYmVpWUY5QkV3RFFZSktvWklodmNOQVFFTEJRQXdnZjR4Q3pBSkJnTlYKQkFZVEFsSlZNUmN3RlFZRFZRUUlFdzVRY21sdGIzSnphM2tnUzNKaGVURVVNQklHQTFVRUJ4TUxWbXhoWkdsMgpiM04wYjJzeEd6QVpCZ05WQkFvVEVrOVBUeUJXVTFRZ1EyOXVjM1ZzZEdsdVp6RUxNQWtHQTFVRUN4TUNTVlF4CkdqQVlCZ05WQkFNVEVWWlRWQ0JEYjI1emRXeDBhVzVuSUVOQk1Ta3dKd1lKS29aSWh2Y05BUWtCRmhwelpYSm4KWlhrdWEwQjJjM1JqYjI1emRXeDBhVzVuTG01bGRERVBNQTBHQTFVRUVSTUdOamt3TURBd01SQXdEZ1lEVlFRTQpFd2ROWVdsdUlFTkJNU3d3S2dZRFZRUU5FeU5OWVdsdUlFTkJJR1p2Y2lCaGRYUm9iM0pwZEhrZ1lXNTVJSE5sCmNuWnBZMlZ6TGpBZUZ3MHhPVEV5TVRZd056TXlNREJhRncweU5ERXlNVFl3TnpNeU1EQmFNSUd4TVFzd0NRWUQKVlFRR0V3SlNWVEVYTUJVR0ExVUVDQk1PVUhKcGJXOXljMnQ1SUV0eVlYa3hGREFTQmdOVkJBY1RDMVpzWVdScApkbTl6ZEc5ck1Sc3dHUVlEVlFRS0V4SlBUMDhnVmxOVUlFTnZibk4xYkhScGJtY3hHakFZQmdOVkJBc1RFVWxVCklFbHVabkpoYzNSeWRXTjBkWEpsTVNrd0p3WUpLb1pJaHZjTkFRa0JGaHB6WlhKblpYa3VhMEIyYzNSamIyNXoKZFd4MGFXNW5MbTVsZERFUE1BMEdBMVVFRVJNR05qa3dNREF3TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBMkZVVHZ5ZHl6TTY1RFBvTW9pb3hPSk5RbmIzK2RyVmtuU2gvMm03cWlNOW9GcFNECkVHUm5yZm5rS0RxSlh0cjNtMWZzcXIzZWpMTjhJQVdnOEF0N3FQVXNuOXYweTRTZkh2S1lQUUhwU2VtUGhCMnUKWUxtTTF2WXhWWVJIMXhOeEFXZmg2N3hOSUorLzN0dnc1ZUR5V0NCb2dOUUJubWEvSTdKa2dHOG1xYTRlektERwpPLzRvUHRRanBEL0lrdVpBRm5vRVpmQm5ZWThwTUwwQ1M2U0RHNTVob3h3TTJVeHVKUDVnbEpJS0JhdUhTZFNTCmlvQ1lkTi9UZzRIaVc2K21OWGtIdENmNjhUc0xkK0dIYi9tNm5JT1dySllhY3Fxb3hGSWpGdXNMUjdXd1hyTE0KbUxpYy95LzJZZ3RqeWhEMTJZbDEwRi9WN1N2a1R4cFczNitYOHdJREFRQUJvMm93YURBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJSa3BlOUpETSthS2JuQVBqZTkvQzBiUnd2M0pqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RkFZRFZSMFJCQTB3QzRJSktpNTJjM1F1YkdGdU1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUURGMGFSeUdBSVNZQW8zSzRtNGw5Nzc5ZHkwWGNpeUl2WTh3ckZTaXFDSgpFdGhUSWRZZXJwK2JmTjBUbkd4eEtmRVJJZFRKb2xyZ2V4RUY3SEZsaTlMQXg2R0RuVjhQbU1CVThWU0I5cHlHCldVK05BNVVuaTNDa0xtSUFJRlFVOEtBbGlycHhWbkdVMy90VGxlaWZFR2pFNGptM2xLM1VRMDEwYnpYY2hSckwKNTZUeGRQK0hidjFQZHBLSlc1ajMwQ3ZCMHdMWEFNMlJaRXlub25ydUhsMnBSdmh3WEI2Uy9Oc1cyc05tYzd1awpWa0F3TUtEV3kzTE5QeHl1dTRna1hBSmp6Mnd2aGRQTG81LzVoWWRFNEtYMHkvWXhleTg5S2w4ZDArUDdhS2c2CitlWlZRNER5c0JBSG1Tcmh6Q3JTSDRWZE0xbmZvUzNGQmt4c0dYQkRhd3dXNmM4ZloxYnZMcmV4Vmh0OFhVMkMKQmNkYnAzZGpGM3RwdVF2dFYzZXUzUldJRGpNWjNwYUJwYTc1aWNQTFJRZ1BZY1NrMzdjUXhQbFFZL05VYStZUQpaT0JJVTF4Ny8wSG5XY1g1UURnSEpBZEdSdmZBSTRhNlNjQjQ2V2MyOEtYVit2aG0zYXF3MSt3RXlRaWR2djZBCk9HdU00Rnp1aTFHandjWkdhNU45c0hCcGtBYlp1ckxabWVJN21ESXl6cUp1aVlVd2JwUm9pMW9kMUd2MVZRZG0KdEJQTlhmUEhjcmt5NHZjdUhVUkZtVC9JN1I1bXRWd01mc3daSVR1S21CeU4ydHB0Y0l1Zy9pdW52eElKZWxWdwpsd2ozT1UzeFZGcVVUVEVTby9IQTUxdmYrb1A1N2xDUlBpMTByTmVRbk43WHRTNDhjUmw4V2I1RXhCRk1NT1JPCmRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=' }}"
k8s_tls_key: "{{ lookup('env', 'K8S_TLS_KEY') or 'LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMkZVVHZ5ZHl6TTY1RFBvTW9pb3hPSk5RbmIzK2RyVmtuU2gvMm03cWlNOW9GcFNECkVHUm5yZm5rS0RxSlh0cjNtMWZzcXIzZWpMTjhJQVdnOEF0N3FQVXNuOXYweTRTZkh2S1lQUUhwU2VtUGhCMnUKWUxtTTF2WXhWWVJIMXhOeEFXZmg2N3hOSUorLzN0dnc1ZUR5V0NCb2dOUUJubWEvSTdKa2dHOG1xYTRlektERwpPLzRvUHRRanBEL0lrdVpBRm5vRVpmQm5ZWThwTUwwQ1M2U0RHNTVob3h3TTJVeHVKUDVnbEpJS0JhdUhTZFNTCmlvQ1lkTi9UZzRIaVc2K21OWGtIdENmNjhUc0xkK0dIYi9tNm5JT1dySllhY3Fxb3hGSWpGdXNMUjdXd1hyTE0KbUxpYy95LzJZZ3RqeWhEMTJZbDEwRi9WN1N2a1R4cFczNitYOHdJREFRQUJBb0lCQUVTbU10NzlLTHYvZWMrNQpaZHJzSXJSK1l4MjdsZzJib0hNUzBBZkVITjhQV2t1WUUwTlhhV05YSW1UMXRuUUlibnk0V1IwUnBaYm11aVA3ClJVZ0hqTlZnQUNvMmhhY3p6YjduWXhJeEVoUG5ieWlRdHE1eEUxVi95TVlIZFRpMkxhMHhod3JrdFdEOThNaEsKNlZZNW5RNEVNc1YzQVpCL3NIWW1mU2dZblo5SVVVUC9KYXpjTWM1UVpzT3Q0YmZEQU5MZXpwQkd0aDVjU3U5SgpSc2VoTENMeWs1L1FqelIzU0VjdDBYaVlFVGNpbEJITFNLVnJ5dGtyYm4rYjg1enZYblR5S1liWGlHci8yK21kClF4Y0FObG1kRTFTeDAzNzlGSG8yMGFJYnc4ZllFUUFldHovcm8wRWZoY01qK01Va2FMNG1TNlhZRkZDR2ZDbHIKOG83Q1RvRUNnWUVBKzNGWGlGejd5VWYzQWQxMTNFQldGQ2Jta2VmRXhqNlRJYUJMSmhBL0JCYlZ2TkFvaFI3QQorU0pGOThxdlhjTkt4VExjeTZ3d2tUNVhrQ3NqbVlQbWhsS2FyRFdXTWVZR1ZmeHFQWCtGeHRDcFBid2RGYlRpCmwra3g0aU15WGhNb0ZkZEJ2cmcwVXo5cHZtajFYOUpnbk5jNzh5T2tSWXZRVFIxS2hrN0Z4VE1DZ1lFQTNFRFQKOWd1WWczNFgwcEJvN3BSY1YzQm1LdXl4bWMvSG5Ma21TcWxTRXgvdC92eHVrMHlkZmx3eVdlbm9kZTlqMjQydApFTFJJWGsyUFVnck5BV1p3dHBBQmhRMFdkMFB5K2ptUEZpL2hRWTZ1azF6bnAxYmhLK0pKVlJFTXlkM1Z0dU5HCkU4cEFGRVIxOWxyNVlvQzZXMUQ0M0ZqMU1lajJHbGMrVjNnWllrRUNnWUJ5ek9Mc0xaZi81RTJRbW01UGEwaGgKMXdqNm9Oa2tzamsyNXhxb2ZFNXBMWXZVc3kxczZnZXROOHErUWRvamN5RFdQRXkyNlIwYmsxMGpRNjd6VGxlWQpDR3I2S1ZVejN4UVJlamQvY0pQQm5FOUpFblF0RHZOTjdIaU1DUW5jRGQ4RmFjeG9xVzJxZkk5cEVqN0Z5eVcxCk5rZjIwTlVWczZvZEt6eDFhYzIrSlFLQmdRQ005Mnp4NkFBSUFMY01qR0tzZUFZVjdKbG5WYkJoeWt0dXNrMmcKc1hnWFIzTlNwSXU4K09kQURaQW9YZjNySlhsYTl2VlNZS0NFd3MwODdDN0RlNlllSWxMbXJqYTN4S1NKcERkQgpNd25QcEp0MU01d01UUjIyc1pEUHdpYldPSVhsRk5jd0tWMFQyN0ZJS0hlK3BMY2haTlN5YXJrYjVZZEYycHJLCjd0SUlRUUtCZ0Y3azdhS0ZZVFowc0NwRUUxQzYrSmp2WVBkMmZ4blVkTy9MWEFoUW1CZG1jYkhHK2J6dytReUcKWGhGTHVya3BsK01rU1U0elRGdEtsbDVCT1RwdzVaa01nNm1rTGhrck1ER1YrNlJFL2k4U21lMU5hcXlxK28xKwppeWtKYlV1WWlkOUpvZ3dHTmFlZWFNWUpCMHVSS3JOMjljajA1dnJxb2trM3hBaUorZjROCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==' }}"
