# set to local images because too long execution
image: onegreyonewhite/tox:tox

variables:
  TESTS: "polemarch.main.tests"
  GET_SOURCES_ATTEMPTS: 3
  ARTIFACT_DOWNLOAD_ATTEMPTS: 3
  RESTORE_CACHE_ATTEMPTS: 3
  DJANGO_LOG_LEVEL: 'CRITICAL'

stages:
  - code_standarts
  - build
  - test
  - packaging-test
  - release
  - publish

# Test templates
###########################################
.branch_tests_template: &branch_tests
  stage: test
  image: onegreyonewhite/tox:tox
  variables:
    TOX_ENVS: ""
  script:
   - make test ENVS=$TOX_ENVS
   - make build-clean
   - coverage html
  artifacts:
    name: "coverage_branch(${CI_BUILD_REF_NAME})_${CI_BUILD_ID}"
    expire_in: 1 hour
    paths:
    - htmlcov/
    - dist/
  except:
    - GUI
    - tags
  retry: 2

.pack_tamplate: &packing-test
  stage: packaging-test
  image: onegreyonewhite/tox:tox
  variables:
    MYSQL_ROOT_PASSWORD: 'polemarch'
    MYSQL_DATABASE: 'polemarch'
    MYSQL_USER: 'polemarch'
    MYSQL_PASSWORD: 'polemarch'
    RABBITMQ_DEFAULT_USER: 'polemarch'
    RABBITMQ_DEFAULT_PASS: 'polemarch'
    RABBITMQ_DEFAULT_VHOST: 'polemarch'
  services:
    - name: 'mysql:latest'
      alias: 'db-server'
    - name: 'memcached'
      alias: 'cache-server'
    - name: 'memcached'
      alias: 'locks-server'
    - name: 'rabbitmq:latest'
      alias: 'rabbitmq-server'
  artifacts:
    name: "package($CI_BUILD_NAME)"
    expire_in: 1 hour
    paths:
    - dist/
  allow_failure: false
  only:
    - master
  retry: 2

# Branch tests
###########################################
code_style:
  stage: code_standarts
  image: onegreyonewhite/tox:tox
  script:
   - make test ENVS=flake,pylint
  only:
    - /^.{0,}issue_.*$/
    - developer
    - master
  retry: 2

py27-django111-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

py36-django111-install:
  <<: *branch_tests
  variables:
    TOX_ENVS: "$CI_BUILD_NAME"

default_rpm_tests:
  <<: *packing-test
  script:
   - cat /etc/hosts
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_oracle_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:oracle
  script:
   - cat /etc/hosts
   - make rpm RELEASE=${CI_BUILD_ID}
   - sudo yum install dist/*.rpm -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

default_deb_tests:
  <<: *packing-test
  image: onegreyonewhite/tox:ubuntu
  script:
   - cat /etc/hosts
   - make deb RELEASE=${CI_BUILD_ID} RELOCATE_BIN=/usr/local/bin/venvctrl-relocate
   - echo "echo 'hello'" > /bin/systemctl
   - sudo apt install ./dist/*.deb -y -q
   - sudo cat test_settings.ini > /etc/polemarch/settings.ini
   - sudo chown polemarch:polemarch /etc/polemarch/settings.ini
   - sudo -H -u polemarch /opt/polemarch/bin/pip install -r requirements-test.txt
   - sudo -H -u polemarch /opt/polemarch/bin/polemarchctl test -v2 polemarch.main.tests

# Realese
###########################################
release_rpm:
  stage: release
  only:
   - tags
  script:
   - make rpm
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_deb:
  stage: release
  only:
   - tags
  image: onegreyonewhite/tox:ubuntu
  script:
   - make deb RELOCATE_BIN=/usr/local/bin/venvctrl-relocate
  allow_failure: false
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

release_pypi:
  stage: release
  only:
   - tags
  before_script:
  - pip install vstcompile[doc]
  script:
   - make compile
  allow_failure: true
  artifacts:
    name: "release-rpm-${CI_BUILD_REF_NAME}.${CI_BUILD_ID}"
    paths:
    - dist/

publish_pypi:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  only:
   - tags
  script:
  - twine upload -u ${PYPI_UPLOAD_NAME} -p ${PYPI_UPLOAD_PASSWORD} dist/*.tar.gz

publish_gitlab:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  only:
   - tags
  allow_failure: true
  before_script:
  - git remote add gitlab_public https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/vstconsulting/polemarch.git
  script:
  - git push -f gitlab_public master
  - git push -f gitlab_public ${CI_COMMIT_TAG}

publish_release:
  stage: publish
  image: onegreyonewhite/tox:ubuntu
  only:
   - tags
  allow_failure: true
  before_script:
  - npm install -g github-release-cli
  - git remote add github_public https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/vstconsulting/polemarch.git
  script:
  - git push -f github_public master
  - git push -f github_public ${CI_COMMIT_TAG}
  - npm run github-release upload --owner vstconsulting --repo polemarch --tag="${CI_COMMIT_TAG}" --name="${CI_COMMIT_TAG}" --body="${CI_COMMIT_MESSAGE}" "dist/polemarch-${CI_COMMIT_TAG}-0.x86_64.rpm" "dist/polemarch_${CI_COMMIT_TAG}-0_amd64.deb" "dist/polemarch-${CI_COMMIT_TAG}.tar.gz"
